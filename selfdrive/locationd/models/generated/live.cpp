#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6759259717540961999) {
   out_6759259717540961999[0] = 0;
   out_6759259717540961999[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6759259717540961999[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6759259717540961999[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6759259717540961999[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6759259717540961999[5] = -sin(in_vec[1]);
   out_6759259717540961999[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6759259717540961999[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6759259717540961999[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6759259717540961999[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6759259717540961999[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6759259717540961999[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6759259717540961999[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6759259717540961999[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6759259717540961999[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6759259717540961999[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6759259717540961999[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6759259717540961999[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_712671743316778553) {
   out_712671743316778553[0] = delta_x[0] + nom_x[0];
   out_712671743316778553[1] = delta_x[1] + nom_x[1];
   out_712671743316778553[2] = delta_x[2] + nom_x[2];
   out_712671743316778553[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_712671743316778553[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_712671743316778553[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_712671743316778553[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_712671743316778553[7] = delta_x[6] + nom_x[7];
   out_712671743316778553[8] = delta_x[7] + nom_x[8];
   out_712671743316778553[9] = delta_x[8] + nom_x[9];
   out_712671743316778553[10] = delta_x[9] + nom_x[10];
   out_712671743316778553[11] = delta_x[10] + nom_x[11];
   out_712671743316778553[12] = delta_x[11] + nom_x[12];
   out_712671743316778553[13] = delta_x[12] + nom_x[13];
   out_712671743316778553[14] = delta_x[13] + nom_x[14];
   out_712671743316778553[15] = delta_x[14] + nom_x[15];
   out_712671743316778553[16] = delta_x[15] + nom_x[16];
   out_712671743316778553[17] = delta_x[16] + nom_x[17];
   out_712671743316778553[18] = delta_x[17] + nom_x[18];
   out_712671743316778553[19] = delta_x[18] + nom_x[19];
   out_712671743316778553[20] = delta_x[19] + nom_x[20];
   out_712671743316778553[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1551098332499718356) {
   out_1551098332499718356[0] = -nom_x[0] + true_x[0];
   out_1551098332499718356[1] = -nom_x[1] + true_x[1];
   out_1551098332499718356[2] = -nom_x[2] + true_x[2];
   out_1551098332499718356[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1551098332499718356[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1551098332499718356[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1551098332499718356[6] = -nom_x[7] + true_x[7];
   out_1551098332499718356[7] = -nom_x[8] + true_x[8];
   out_1551098332499718356[8] = -nom_x[9] + true_x[9];
   out_1551098332499718356[9] = -nom_x[10] + true_x[10];
   out_1551098332499718356[10] = -nom_x[11] + true_x[11];
   out_1551098332499718356[11] = -nom_x[12] + true_x[12];
   out_1551098332499718356[12] = -nom_x[13] + true_x[13];
   out_1551098332499718356[13] = -nom_x[14] + true_x[14];
   out_1551098332499718356[14] = -nom_x[15] + true_x[15];
   out_1551098332499718356[15] = -nom_x[16] + true_x[16];
   out_1551098332499718356[16] = -nom_x[17] + true_x[17];
   out_1551098332499718356[17] = -nom_x[18] + true_x[18];
   out_1551098332499718356[18] = -nom_x[19] + true_x[19];
   out_1551098332499718356[19] = -nom_x[20] + true_x[20];
   out_1551098332499718356[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7646199264428369681) {
   out_7646199264428369681[0] = 1.0;
   out_7646199264428369681[1] = 0;
   out_7646199264428369681[2] = 0;
   out_7646199264428369681[3] = 0;
   out_7646199264428369681[4] = 0;
   out_7646199264428369681[5] = 0;
   out_7646199264428369681[6] = 0;
   out_7646199264428369681[7] = 0;
   out_7646199264428369681[8] = 0;
   out_7646199264428369681[9] = 0;
   out_7646199264428369681[10] = 0;
   out_7646199264428369681[11] = 0;
   out_7646199264428369681[12] = 0;
   out_7646199264428369681[13] = 0;
   out_7646199264428369681[14] = 0;
   out_7646199264428369681[15] = 0;
   out_7646199264428369681[16] = 0;
   out_7646199264428369681[17] = 0;
   out_7646199264428369681[18] = 0;
   out_7646199264428369681[19] = 0;
   out_7646199264428369681[20] = 0;
   out_7646199264428369681[21] = 0;
   out_7646199264428369681[22] = 1.0;
   out_7646199264428369681[23] = 0;
   out_7646199264428369681[24] = 0;
   out_7646199264428369681[25] = 0;
   out_7646199264428369681[26] = 0;
   out_7646199264428369681[27] = 0;
   out_7646199264428369681[28] = 0;
   out_7646199264428369681[29] = 0;
   out_7646199264428369681[30] = 0;
   out_7646199264428369681[31] = 0;
   out_7646199264428369681[32] = 0;
   out_7646199264428369681[33] = 0;
   out_7646199264428369681[34] = 0;
   out_7646199264428369681[35] = 0;
   out_7646199264428369681[36] = 0;
   out_7646199264428369681[37] = 0;
   out_7646199264428369681[38] = 0;
   out_7646199264428369681[39] = 0;
   out_7646199264428369681[40] = 0;
   out_7646199264428369681[41] = 0;
   out_7646199264428369681[42] = 0;
   out_7646199264428369681[43] = 0;
   out_7646199264428369681[44] = 1.0;
   out_7646199264428369681[45] = 0;
   out_7646199264428369681[46] = 0;
   out_7646199264428369681[47] = 0;
   out_7646199264428369681[48] = 0;
   out_7646199264428369681[49] = 0;
   out_7646199264428369681[50] = 0;
   out_7646199264428369681[51] = 0;
   out_7646199264428369681[52] = 0;
   out_7646199264428369681[53] = 0;
   out_7646199264428369681[54] = 0;
   out_7646199264428369681[55] = 0;
   out_7646199264428369681[56] = 0;
   out_7646199264428369681[57] = 0;
   out_7646199264428369681[58] = 0;
   out_7646199264428369681[59] = 0;
   out_7646199264428369681[60] = 0;
   out_7646199264428369681[61] = 0;
   out_7646199264428369681[62] = 0;
   out_7646199264428369681[63] = 0;
   out_7646199264428369681[64] = 0;
   out_7646199264428369681[65] = 0;
   out_7646199264428369681[66] = -0.5*state[4];
   out_7646199264428369681[67] = -0.5*state[5];
   out_7646199264428369681[68] = -0.5*state[6];
   out_7646199264428369681[69] = 0;
   out_7646199264428369681[70] = 0;
   out_7646199264428369681[71] = 0;
   out_7646199264428369681[72] = 0;
   out_7646199264428369681[73] = 0;
   out_7646199264428369681[74] = 0;
   out_7646199264428369681[75] = 0;
   out_7646199264428369681[76] = 0;
   out_7646199264428369681[77] = 0;
   out_7646199264428369681[78] = 0;
   out_7646199264428369681[79] = 0;
   out_7646199264428369681[80] = 0;
   out_7646199264428369681[81] = 0;
   out_7646199264428369681[82] = 0;
   out_7646199264428369681[83] = 0;
   out_7646199264428369681[84] = 0;
   out_7646199264428369681[85] = 0;
   out_7646199264428369681[86] = 0;
   out_7646199264428369681[87] = 0.5*state[3];
   out_7646199264428369681[88] = 0.5*state[6];
   out_7646199264428369681[89] = -0.5*state[5];
   out_7646199264428369681[90] = 0;
   out_7646199264428369681[91] = 0;
   out_7646199264428369681[92] = 0;
   out_7646199264428369681[93] = 0;
   out_7646199264428369681[94] = 0;
   out_7646199264428369681[95] = 0;
   out_7646199264428369681[96] = 0;
   out_7646199264428369681[97] = 0;
   out_7646199264428369681[98] = 0;
   out_7646199264428369681[99] = 0;
   out_7646199264428369681[100] = 0;
   out_7646199264428369681[101] = 0;
   out_7646199264428369681[102] = 0;
   out_7646199264428369681[103] = 0;
   out_7646199264428369681[104] = 0;
   out_7646199264428369681[105] = 0;
   out_7646199264428369681[106] = 0;
   out_7646199264428369681[107] = 0;
   out_7646199264428369681[108] = -0.5*state[6];
   out_7646199264428369681[109] = 0.5*state[3];
   out_7646199264428369681[110] = 0.5*state[4];
   out_7646199264428369681[111] = 0;
   out_7646199264428369681[112] = 0;
   out_7646199264428369681[113] = 0;
   out_7646199264428369681[114] = 0;
   out_7646199264428369681[115] = 0;
   out_7646199264428369681[116] = 0;
   out_7646199264428369681[117] = 0;
   out_7646199264428369681[118] = 0;
   out_7646199264428369681[119] = 0;
   out_7646199264428369681[120] = 0;
   out_7646199264428369681[121] = 0;
   out_7646199264428369681[122] = 0;
   out_7646199264428369681[123] = 0;
   out_7646199264428369681[124] = 0;
   out_7646199264428369681[125] = 0;
   out_7646199264428369681[126] = 0;
   out_7646199264428369681[127] = 0;
   out_7646199264428369681[128] = 0;
   out_7646199264428369681[129] = 0.5*state[5];
   out_7646199264428369681[130] = -0.5*state[4];
   out_7646199264428369681[131] = 0.5*state[3];
   out_7646199264428369681[132] = 0;
   out_7646199264428369681[133] = 0;
   out_7646199264428369681[134] = 0;
   out_7646199264428369681[135] = 0;
   out_7646199264428369681[136] = 0;
   out_7646199264428369681[137] = 0;
   out_7646199264428369681[138] = 0;
   out_7646199264428369681[139] = 0;
   out_7646199264428369681[140] = 0;
   out_7646199264428369681[141] = 0;
   out_7646199264428369681[142] = 0;
   out_7646199264428369681[143] = 0;
   out_7646199264428369681[144] = 0;
   out_7646199264428369681[145] = 0;
   out_7646199264428369681[146] = 0;
   out_7646199264428369681[147] = 0;
   out_7646199264428369681[148] = 0;
   out_7646199264428369681[149] = 0;
   out_7646199264428369681[150] = 0;
   out_7646199264428369681[151] = 0;
   out_7646199264428369681[152] = 0;
   out_7646199264428369681[153] = 1.0;
   out_7646199264428369681[154] = 0;
   out_7646199264428369681[155] = 0;
   out_7646199264428369681[156] = 0;
   out_7646199264428369681[157] = 0;
   out_7646199264428369681[158] = 0;
   out_7646199264428369681[159] = 0;
   out_7646199264428369681[160] = 0;
   out_7646199264428369681[161] = 0;
   out_7646199264428369681[162] = 0;
   out_7646199264428369681[163] = 0;
   out_7646199264428369681[164] = 0;
   out_7646199264428369681[165] = 0;
   out_7646199264428369681[166] = 0;
   out_7646199264428369681[167] = 0;
   out_7646199264428369681[168] = 0;
   out_7646199264428369681[169] = 0;
   out_7646199264428369681[170] = 0;
   out_7646199264428369681[171] = 0;
   out_7646199264428369681[172] = 0;
   out_7646199264428369681[173] = 0;
   out_7646199264428369681[174] = 0;
   out_7646199264428369681[175] = 1.0;
   out_7646199264428369681[176] = 0;
   out_7646199264428369681[177] = 0;
   out_7646199264428369681[178] = 0;
   out_7646199264428369681[179] = 0;
   out_7646199264428369681[180] = 0;
   out_7646199264428369681[181] = 0;
   out_7646199264428369681[182] = 0;
   out_7646199264428369681[183] = 0;
   out_7646199264428369681[184] = 0;
   out_7646199264428369681[185] = 0;
   out_7646199264428369681[186] = 0;
   out_7646199264428369681[187] = 0;
   out_7646199264428369681[188] = 0;
   out_7646199264428369681[189] = 0;
   out_7646199264428369681[190] = 0;
   out_7646199264428369681[191] = 0;
   out_7646199264428369681[192] = 0;
   out_7646199264428369681[193] = 0;
   out_7646199264428369681[194] = 0;
   out_7646199264428369681[195] = 0;
   out_7646199264428369681[196] = 0;
   out_7646199264428369681[197] = 1.0;
   out_7646199264428369681[198] = 0;
   out_7646199264428369681[199] = 0;
   out_7646199264428369681[200] = 0;
   out_7646199264428369681[201] = 0;
   out_7646199264428369681[202] = 0;
   out_7646199264428369681[203] = 0;
   out_7646199264428369681[204] = 0;
   out_7646199264428369681[205] = 0;
   out_7646199264428369681[206] = 0;
   out_7646199264428369681[207] = 0;
   out_7646199264428369681[208] = 0;
   out_7646199264428369681[209] = 0;
   out_7646199264428369681[210] = 0;
   out_7646199264428369681[211] = 0;
   out_7646199264428369681[212] = 0;
   out_7646199264428369681[213] = 0;
   out_7646199264428369681[214] = 0;
   out_7646199264428369681[215] = 0;
   out_7646199264428369681[216] = 0;
   out_7646199264428369681[217] = 0;
   out_7646199264428369681[218] = 0;
   out_7646199264428369681[219] = 1.0;
   out_7646199264428369681[220] = 0;
   out_7646199264428369681[221] = 0;
   out_7646199264428369681[222] = 0;
   out_7646199264428369681[223] = 0;
   out_7646199264428369681[224] = 0;
   out_7646199264428369681[225] = 0;
   out_7646199264428369681[226] = 0;
   out_7646199264428369681[227] = 0;
   out_7646199264428369681[228] = 0;
   out_7646199264428369681[229] = 0;
   out_7646199264428369681[230] = 0;
   out_7646199264428369681[231] = 0;
   out_7646199264428369681[232] = 0;
   out_7646199264428369681[233] = 0;
   out_7646199264428369681[234] = 0;
   out_7646199264428369681[235] = 0;
   out_7646199264428369681[236] = 0;
   out_7646199264428369681[237] = 0;
   out_7646199264428369681[238] = 0;
   out_7646199264428369681[239] = 0;
   out_7646199264428369681[240] = 0;
   out_7646199264428369681[241] = 1.0;
   out_7646199264428369681[242] = 0;
   out_7646199264428369681[243] = 0;
   out_7646199264428369681[244] = 0;
   out_7646199264428369681[245] = 0;
   out_7646199264428369681[246] = 0;
   out_7646199264428369681[247] = 0;
   out_7646199264428369681[248] = 0;
   out_7646199264428369681[249] = 0;
   out_7646199264428369681[250] = 0;
   out_7646199264428369681[251] = 0;
   out_7646199264428369681[252] = 0;
   out_7646199264428369681[253] = 0;
   out_7646199264428369681[254] = 0;
   out_7646199264428369681[255] = 0;
   out_7646199264428369681[256] = 0;
   out_7646199264428369681[257] = 0;
   out_7646199264428369681[258] = 0;
   out_7646199264428369681[259] = 0;
   out_7646199264428369681[260] = 0;
   out_7646199264428369681[261] = 0;
   out_7646199264428369681[262] = 0;
   out_7646199264428369681[263] = 1.0;
   out_7646199264428369681[264] = 0;
   out_7646199264428369681[265] = 0;
   out_7646199264428369681[266] = 0;
   out_7646199264428369681[267] = 0;
   out_7646199264428369681[268] = 0;
   out_7646199264428369681[269] = 0;
   out_7646199264428369681[270] = 0;
   out_7646199264428369681[271] = 0;
   out_7646199264428369681[272] = 0;
   out_7646199264428369681[273] = 0;
   out_7646199264428369681[274] = 0;
   out_7646199264428369681[275] = 0;
   out_7646199264428369681[276] = 0;
   out_7646199264428369681[277] = 0;
   out_7646199264428369681[278] = 0;
   out_7646199264428369681[279] = 0;
   out_7646199264428369681[280] = 0;
   out_7646199264428369681[281] = 0;
   out_7646199264428369681[282] = 0;
   out_7646199264428369681[283] = 0;
   out_7646199264428369681[284] = 0;
   out_7646199264428369681[285] = 1.0;
   out_7646199264428369681[286] = 0;
   out_7646199264428369681[287] = 0;
   out_7646199264428369681[288] = 0;
   out_7646199264428369681[289] = 0;
   out_7646199264428369681[290] = 0;
   out_7646199264428369681[291] = 0;
   out_7646199264428369681[292] = 0;
   out_7646199264428369681[293] = 0;
   out_7646199264428369681[294] = 0;
   out_7646199264428369681[295] = 0;
   out_7646199264428369681[296] = 0;
   out_7646199264428369681[297] = 0;
   out_7646199264428369681[298] = 0;
   out_7646199264428369681[299] = 0;
   out_7646199264428369681[300] = 0;
   out_7646199264428369681[301] = 0;
   out_7646199264428369681[302] = 0;
   out_7646199264428369681[303] = 0;
   out_7646199264428369681[304] = 0;
   out_7646199264428369681[305] = 0;
   out_7646199264428369681[306] = 0;
   out_7646199264428369681[307] = 1.0;
   out_7646199264428369681[308] = 0;
   out_7646199264428369681[309] = 0;
   out_7646199264428369681[310] = 0;
   out_7646199264428369681[311] = 0;
   out_7646199264428369681[312] = 0;
   out_7646199264428369681[313] = 0;
   out_7646199264428369681[314] = 0;
   out_7646199264428369681[315] = 0;
   out_7646199264428369681[316] = 0;
   out_7646199264428369681[317] = 0;
   out_7646199264428369681[318] = 0;
   out_7646199264428369681[319] = 0;
   out_7646199264428369681[320] = 0;
   out_7646199264428369681[321] = 0;
   out_7646199264428369681[322] = 0;
   out_7646199264428369681[323] = 0;
   out_7646199264428369681[324] = 0;
   out_7646199264428369681[325] = 0;
   out_7646199264428369681[326] = 0;
   out_7646199264428369681[327] = 0;
   out_7646199264428369681[328] = 0;
   out_7646199264428369681[329] = 1.0;
   out_7646199264428369681[330] = 0;
   out_7646199264428369681[331] = 0;
   out_7646199264428369681[332] = 0;
   out_7646199264428369681[333] = 0;
   out_7646199264428369681[334] = 0;
   out_7646199264428369681[335] = 0;
   out_7646199264428369681[336] = 0;
   out_7646199264428369681[337] = 0;
   out_7646199264428369681[338] = 0;
   out_7646199264428369681[339] = 0;
   out_7646199264428369681[340] = 0;
   out_7646199264428369681[341] = 0;
   out_7646199264428369681[342] = 0;
   out_7646199264428369681[343] = 0;
   out_7646199264428369681[344] = 0;
   out_7646199264428369681[345] = 0;
   out_7646199264428369681[346] = 0;
   out_7646199264428369681[347] = 0;
   out_7646199264428369681[348] = 0;
   out_7646199264428369681[349] = 0;
   out_7646199264428369681[350] = 0;
   out_7646199264428369681[351] = 1.0;
   out_7646199264428369681[352] = 0;
   out_7646199264428369681[353] = 0;
   out_7646199264428369681[354] = 0;
   out_7646199264428369681[355] = 0;
   out_7646199264428369681[356] = 0;
   out_7646199264428369681[357] = 0;
   out_7646199264428369681[358] = 0;
   out_7646199264428369681[359] = 0;
   out_7646199264428369681[360] = 0;
   out_7646199264428369681[361] = 0;
   out_7646199264428369681[362] = 0;
   out_7646199264428369681[363] = 0;
   out_7646199264428369681[364] = 0;
   out_7646199264428369681[365] = 0;
   out_7646199264428369681[366] = 0;
   out_7646199264428369681[367] = 0;
   out_7646199264428369681[368] = 0;
   out_7646199264428369681[369] = 0;
   out_7646199264428369681[370] = 0;
   out_7646199264428369681[371] = 0;
   out_7646199264428369681[372] = 0;
   out_7646199264428369681[373] = 1.0;
   out_7646199264428369681[374] = 0;
   out_7646199264428369681[375] = 0;
   out_7646199264428369681[376] = 0;
   out_7646199264428369681[377] = 0;
   out_7646199264428369681[378] = 0;
   out_7646199264428369681[379] = 0;
   out_7646199264428369681[380] = 0;
   out_7646199264428369681[381] = 0;
   out_7646199264428369681[382] = 0;
   out_7646199264428369681[383] = 0;
   out_7646199264428369681[384] = 0;
   out_7646199264428369681[385] = 0;
   out_7646199264428369681[386] = 0;
   out_7646199264428369681[387] = 0;
   out_7646199264428369681[388] = 0;
   out_7646199264428369681[389] = 0;
   out_7646199264428369681[390] = 0;
   out_7646199264428369681[391] = 0;
   out_7646199264428369681[392] = 0;
   out_7646199264428369681[393] = 0;
   out_7646199264428369681[394] = 0;
   out_7646199264428369681[395] = 1.0;
   out_7646199264428369681[396] = 0;
   out_7646199264428369681[397] = 0;
   out_7646199264428369681[398] = 0;
   out_7646199264428369681[399] = 0;
   out_7646199264428369681[400] = 0;
   out_7646199264428369681[401] = 0;
   out_7646199264428369681[402] = 0;
   out_7646199264428369681[403] = 0;
   out_7646199264428369681[404] = 0;
   out_7646199264428369681[405] = 0;
   out_7646199264428369681[406] = 0;
   out_7646199264428369681[407] = 0;
   out_7646199264428369681[408] = 0;
   out_7646199264428369681[409] = 0;
   out_7646199264428369681[410] = 0;
   out_7646199264428369681[411] = 0;
   out_7646199264428369681[412] = 0;
   out_7646199264428369681[413] = 0;
   out_7646199264428369681[414] = 0;
   out_7646199264428369681[415] = 0;
   out_7646199264428369681[416] = 0;
   out_7646199264428369681[417] = 1.0;
   out_7646199264428369681[418] = 0;
   out_7646199264428369681[419] = 0;
   out_7646199264428369681[420] = 0;
   out_7646199264428369681[421] = 0;
   out_7646199264428369681[422] = 0;
   out_7646199264428369681[423] = 0;
   out_7646199264428369681[424] = 0;
   out_7646199264428369681[425] = 0;
   out_7646199264428369681[426] = 0;
   out_7646199264428369681[427] = 0;
   out_7646199264428369681[428] = 0;
   out_7646199264428369681[429] = 0;
   out_7646199264428369681[430] = 0;
   out_7646199264428369681[431] = 0;
   out_7646199264428369681[432] = 0;
   out_7646199264428369681[433] = 0;
   out_7646199264428369681[434] = 0;
   out_7646199264428369681[435] = 0;
   out_7646199264428369681[436] = 0;
   out_7646199264428369681[437] = 0;
   out_7646199264428369681[438] = 0;
   out_7646199264428369681[439] = 1.0;
   out_7646199264428369681[440] = 0;
   out_7646199264428369681[441] = 0;
   out_7646199264428369681[442] = 0;
   out_7646199264428369681[443] = 0;
   out_7646199264428369681[444] = 0;
   out_7646199264428369681[445] = 0;
   out_7646199264428369681[446] = 0;
   out_7646199264428369681[447] = 0;
   out_7646199264428369681[448] = 0;
   out_7646199264428369681[449] = 0;
   out_7646199264428369681[450] = 0;
   out_7646199264428369681[451] = 0;
   out_7646199264428369681[452] = 0;
   out_7646199264428369681[453] = 0;
   out_7646199264428369681[454] = 0;
   out_7646199264428369681[455] = 0;
   out_7646199264428369681[456] = 0;
   out_7646199264428369681[457] = 0;
   out_7646199264428369681[458] = 0;
   out_7646199264428369681[459] = 0;
   out_7646199264428369681[460] = 0;
   out_7646199264428369681[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2537679088963151294) {
   out_2537679088963151294[0] = dt*state[7] + state[0];
   out_2537679088963151294[1] = dt*state[8] + state[1];
   out_2537679088963151294[2] = dt*state[9] + state[2];
   out_2537679088963151294[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2537679088963151294[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2537679088963151294[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2537679088963151294[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2537679088963151294[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2537679088963151294[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2537679088963151294[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2537679088963151294[10] = state[10];
   out_2537679088963151294[11] = state[11];
   out_2537679088963151294[12] = state[12];
   out_2537679088963151294[13] = state[13];
   out_2537679088963151294[14] = state[14];
   out_2537679088963151294[15] = state[15];
   out_2537679088963151294[16] = state[16];
   out_2537679088963151294[17] = state[17];
   out_2537679088963151294[18] = state[18];
   out_2537679088963151294[19] = state[19];
   out_2537679088963151294[20] = state[20];
   out_2537679088963151294[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2272821566001163028) {
   out_2272821566001163028[0] = 1;
   out_2272821566001163028[1] = 0;
   out_2272821566001163028[2] = 0;
   out_2272821566001163028[3] = 0;
   out_2272821566001163028[4] = 0;
   out_2272821566001163028[5] = 0;
   out_2272821566001163028[6] = dt;
   out_2272821566001163028[7] = 0;
   out_2272821566001163028[8] = 0;
   out_2272821566001163028[9] = 0;
   out_2272821566001163028[10] = 0;
   out_2272821566001163028[11] = 0;
   out_2272821566001163028[12] = 0;
   out_2272821566001163028[13] = 0;
   out_2272821566001163028[14] = 0;
   out_2272821566001163028[15] = 0;
   out_2272821566001163028[16] = 0;
   out_2272821566001163028[17] = 0;
   out_2272821566001163028[18] = 0;
   out_2272821566001163028[19] = 0;
   out_2272821566001163028[20] = 0;
   out_2272821566001163028[21] = 0;
   out_2272821566001163028[22] = 1;
   out_2272821566001163028[23] = 0;
   out_2272821566001163028[24] = 0;
   out_2272821566001163028[25] = 0;
   out_2272821566001163028[26] = 0;
   out_2272821566001163028[27] = 0;
   out_2272821566001163028[28] = dt;
   out_2272821566001163028[29] = 0;
   out_2272821566001163028[30] = 0;
   out_2272821566001163028[31] = 0;
   out_2272821566001163028[32] = 0;
   out_2272821566001163028[33] = 0;
   out_2272821566001163028[34] = 0;
   out_2272821566001163028[35] = 0;
   out_2272821566001163028[36] = 0;
   out_2272821566001163028[37] = 0;
   out_2272821566001163028[38] = 0;
   out_2272821566001163028[39] = 0;
   out_2272821566001163028[40] = 0;
   out_2272821566001163028[41] = 0;
   out_2272821566001163028[42] = 0;
   out_2272821566001163028[43] = 0;
   out_2272821566001163028[44] = 1;
   out_2272821566001163028[45] = 0;
   out_2272821566001163028[46] = 0;
   out_2272821566001163028[47] = 0;
   out_2272821566001163028[48] = 0;
   out_2272821566001163028[49] = 0;
   out_2272821566001163028[50] = dt;
   out_2272821566001163028[51] = 0;
   out_2272821566001163028[52] = 0;
   out_2272821566001163028[53] = 0;
   out_2272821566001163028[54] = 0;
   out_2272821566001163028[55] = 0;
   out_2272821566001163028[56] = 0;
   out_2272821566001163028[57] = 0;
   out_2272821566001163028[58] = 0;
   out_2272821566001163028[59] = 0;
   out_2272821566001163028[60] = 0;
   out_2272821566001163028[61] = 0;
   out_2272821566001163028[62] = 0;
   out_2272821566001163028[63] = 0;
   out_2272821566001163028[64] = 0;
   out_2272821566001163028[65] = 0;
   out_2272821566001163028[66] = 1;
   out_2272821566001163028[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2272821566001163028[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2272821566001163028[69] = 0;
   out_2272821566001163028[70] = 0;
   out_2272821566001163028[71] = 0;
   out_2272821566001163028[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2272821566001163028[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2272821566001163028[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2272821566001163028[75] = 0;
   out_2272821566001163028[76] = 0;
   out_2272821566001163028[77] = 0;
   out_2272821566001163028[78] = 0;
   out_2272821566001163028[79] = 0;
   out_2272821566001163028[80] = 0;
   out_2272821566001163028[81] = 0;
   out_2272821566001163028[82] = 0;
   out_2272821566001163028[83] = 0;
   out_2272821566001163028[84] = 0;
   out_2272821566001163028[85] = 0;
   out_2272821566001163028[86] = 0;
   out_2272821566001163028[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2272821566001163028[88] = 1;
   out_2272821566001163028[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2272821566001163028[90] = 0;
   out_2272821566001163028[91] = 0;
   out_2272821566001163028[92] = 0;
   out_2272821566001163028[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2272821566001163028[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2272821566001163028[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2272821566001163028[96] = 0;
   out_2272821566001163028[97] = 0;
   out_2272821566001163028[98] = 0;
   out_2272821566001163028[99] = 0;
   out_2272821566001163028[100] = 0;
   out_2272821566001163028[101] = 0;
   out_2272821566001163028[102] = 0;
   out_2272821566001163028[103] = 0;
   out_2272821566001163028[104] = 0;
   out_2272821566001163028[105] = 0;
   out_2272821566001163028[106] = 0;
   out_2272821566001163028[107] = 0;
   out_2272821566001163028[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2272821566001163028[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2272821566001163028[110] = 1;
   out_2272821566001163028[111] = 0;
   out_2272821566001163028[112] = 0;
   out_2272821566001163028[113] = 0;
   out_2272821566001163028[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2272821566001163028[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2272821566001163028[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2272821566001163028[117] = 0;
   out_2272821566001163028[118] = 0;
   out_2272821566001163028[119] = 0;
   out_2272821566001163028[120] = 0;
   out_2272821566001163028[121] = 0;
   out_2272821566001163028[122] = 0;
   out_2272821566001163028[123] = 0;
   out_2272821566001163028[124] = 0;
   out_2272821566001163028[125] = 0;
   out_2272821566001163028[126] = 0;
   out_2272821566001163028[127] = 0;
   out_2272821566001163028[128] = 0;
   out_2272821566001163028[129] = 0;
   out_2272821566001163028[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2272821566001163028[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2272821566001163028[132] = 1;
   out_2272821566001163028[133] = 0;
   out_2272821566001163028[134] = 0;
   out_2272821566001163028[135] = 0;
   out_2272821566001163028[136] = 0;
   out_2272821566001163028[137] = 0;
   out_2272821566001163028[138] = 0;
   out_2272821566001163028[139] = 0;
   out_2272821566001163028[140] = 0;
   out_2272821566001163028[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2272821566001163028[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2272821566001163028[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2272821566001163028[144] = 0;
   out_2272821566001163028[145] = 0;
   out_2272821566001163028[146] = 0;
   out_2272821566001163028[147] = 0;
   out_2272821566001163028[148] = 0;
   out_2272821566001163028[149] = 0;
   out_2272821566001163028[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2272821566001163028[151] = 0;
   out_2272821566001163028[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2272821566001163028[153] = 0;
   out_2272821566001163028[154] = 1;
   out_2272821566001163028[155] = 0;
   out_2272821566001163028[156] = 0;
   out_2272821566001163028[157] = 0;
   out_2272821566001163028[158] = 0;
   out_2272821566001163028[159] = 0;
   out_2272821566001163028[160] = 0;
   out_2272821566001163028[161] = 0;
   out_2272821566001163028[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2272821566001163028[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2272821566001163028[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2272821566001163028[165] = 0;
   out_2272821566001163028[166] = 0;
   out_2272821566001163028[167] = 0;
   out_2272821566001163028[168] = 0;
   out_2272821566001163028[169] = 0;
   out_2272821566001163028[170] = 0;
   out_2272821566001163028[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2272821566001163028[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2272821566001163028[173] = 0;
   out_2272821566001163028[174] = 0;
   out_2272821566001163028[175] = 0;
   out_2272821566001163028[176] = 1;
   out_2272821566001163028[177] = 0;
   out_2272821566001163028[178] = 0;
   out_2272821566001163028[179] = 0;
   out_2272821566001163028[180] = 0;
   out_2272821566001163028[181] = 0;
   out_2272821566001163028[182] = 0;
   out_2272821566001163028[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2272821566001163028[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2272821566001163028[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2272821566001163028[186] = 0;
   out_2272821566001163028[187] = 0;
   out_2272821566001163028[188] = 0;
   out_2272821566001163028[189] = 0;
   out_2272821566001163028[190] = 0;
   out_2272821566001163028[191] = 0;
   out_2272821566001163028[192] = 0;
   out_2272821566001163028[193] = 0;
   out_2272821566001163028[194] = 0;
   out_2272821566001163028[195] = 0;
   out_2272821566001163028[196] = 0;
   out_2272821566001163028[197] = 0;
   out_2272821566001163028[198] = 1;
   out_2272821566001163028[199] = 0;
   out_2272821566001163028[200] = 0;
   out_2272821566001163028[201] = 0;
   out_2272821566001163028[202] = 0;
   out_2272821566001163028[203] = 0;
   out_2272821566001163028[204] = 0;
   out_2272821566001163028[205] = 0;
   out_2272821566001163028[206] = 0;
   out_2272821566001163028[207] = 0;
   out_2272821566001163028[208] = 0;
   out_2272821566001163028[209] = 0;
   out_2272821566001163028[210] = 0;
   out_2272821566001163028[211] = 0;
   out_2272821566001163028[212] = 0;
   out_2272821566001163028[213] = 0;
   out_2272821566001163028[214] = 0;
   out_2272821566001163028[215] = 0;
   out_2272821566001163028[216] = 0;
   out_2272821566001163028[217] = 0;
   out_2272821566001163028[218] = 0;
   out_2272821566001163028[219] = 0;
   out_2272821566001163028[220] = 1;
   out_2272821566001163028[221] = 0;
   out_2272821566001163028[222] = 0;
   out_2272821566001163028[223] = 0;
   out_2272821566001163028[224] = 0;
   out_2272821566001163028[225] = 0;
   out_2272821566001163028[226] = 0;
   out_2272821566001163028[227] = 0;
   out_2272821566001163028[228] = 0;
   out_2272821566001163028[229] = 0;
   out_2272821566001163028[230] = 0;
   out_2272821566001163028[231] = 0;
   out_2272821566001163028[232] = 0;
   out_2272821566001163028[233] = 0;
   out_2272821566001163028[234] = 0;
   out_2272821566001163028[235] = 0;
   out_2272821566001163028[236] = 0;
   out_2272821566001163028[237] = 0;
   out_2272821566001163028[238] = 0;
   out_2272821566001163028[239] = 0;
   out_2272821566001163028[240] = 0;
   out_2272821566001163028[241] = 0;
   out_2272821566001163028[242] = 1;
   out_2272821566001163028[243] = 0;
   out_2272821566001163028[244] = 0;
   out_2272821566001163028[245] = 0;
   out_2272821566001163028[246] = 0;
   out_2272821566001163028[247] = 0;
   out_2272821566001163028[248] = 0;
   out_2272821566001163028[249] = 0;
   out_2272821566001163028[250] = 0;
   out_2272821566001163028[251] = 0;
   out_2272821566001163028[252] = 0;
   out_2272821566001163028[253] = 0;
   out_2272821566001163028[254] = 0;
   out_2272821566001163028[255] = 0;
   out_2272821566001163028[256] = 0;
   out_2272821566001163028[257] = 0;
   out_2272821566001163028[258] = 0;
   out_2272821566001163028[259] = 0;
   out_2272821566001163028[260] = 0;
   out_2272821566001163028[261] = 0;
   out_2272821566001163028[262] = 0;
   out_2272821566001163028[263] = 0;
   out_2272821566001163028[264] = 1;
   out_2272821566001163028[265] = 0;
   out_2272821566001163028[266] = 0;
   out_2272821566001163028[267] = 0;
   out_2272821566001163028[268] = 0;
   out_2272821566001163028[269] = 0;
   out_2272821566001163028[270] = 0;
   out_2272821566001163028[271] = 0;
   out_2272821566001163028[272] = 0;
   out_2272821566001163028[273] = 0;
   out_2272821566001163028[274] = 0;
   out_2272821566001163028[275] = 0;
   out_2272821566001163028[276] = 0;
   out_2272821566001163028[277] = 0;
   out_2272821566001163028[278] = 0;
   out_2272821566001163028[279] = 0;
   out_2272821566001163028[280] = 0;
   out_2272821566001163028[281] = 0;
   out_2272821566001163028[282] = 0;
   out_2272821566001163028[283] = 0;
   out_2272821566001163028[284] = 0;
   out_2272821566001163028[285] = 0;
   out_2272821566001163028[286] = 1;
   out_2272821566001163028[287] = 0;
   out_2272821566001163028[288] = 0;
   out_2272821566001163028[289] = 0;
   out_2272821566001163028[290] = 0;
   out_2272821566001163028[291] = 0;
   out_2272821566001163028[292] = 0;
   out_2272821566001163028[293] = 0;
   out_2272821566001163028[294] = 0;
   out_2272821566001163028[295] = 0;
   out_2272821566001163028[296] = 0;
   out_2272821566001163028[297] = 0;
   out_2272821566001163028[298] = 0;
   out_2272821566001163028[299] = 0;
   out_2272821566001163028[300] = 0;
   out_2272821566001163028[301] = 0;
   out_2272821566001163028[302] = 0;
   out_2272821566001163028[303] = 0;
   out_2272821566001163028[304] = 0;
   out_2272821566001163028[305] = 0;
   out_2272821566001163028[306] = 0;
   out_2272821566001163028[307] = 0;
   out_2272821566001163028[308] = 1;
   out_2272821566001163028[309] = 0;
   out_2272821566001163028[310] = 0;
   out_2272821566001163028[311] = 0;
   out_2272821566001163028[312] = 0;
   out_2272821566001163028[313] = 0;
   out_2272821566001163028[314] = 0;
   out_2272821566001163028[315] = 0;
   out_2272821566001163028[316] = 0;
   out_2272821566001163028[317] = 0;
   out_2272821566001163028[318] = 0;
   out_2272821566001163028[319] = 0;
   out_2272821566001163028[320] = 0;
   out_2272821566001163028[321] = 0;
   out_2272821566001163028[322] = 0;
   out_2272821566001163028[323] = 0;
   out_2272821566001163028[324] = 0;
   out_2272821566001163028[325] = 0;
   out_2272821566001163028[326] = 0;
   out_2272821566001163028[327] = 0;
   out_2272821566001163028[328] = 0;
   out_2272821566001163028[329] = 0;
   out_2272821566001163028[330] = 1;
   out_2272821566001163028[331] = 0;
   out_2272821566001163028[332] = 0;
   out_2272821566001163028[333] = 0;
   out_2272821566001163028[334] = 0;
   out_2272821566001163028[335] = 0;
   out_2272821566001163028[336] = 0;
   out_2272821566001163028[337] = 0;
   out_2272821566001163028[338] = 0;
   out_2272821566001163028[339] = 0;
   out_2272821566001163028[340] = 0;
   out_2272821566001163028[341] = 0;
   out_2272821566001163028[342] = 0;
   out_2272821566001163028[343] = 0;
   out_2272821566001163028[344] = 0;
   out_2272821566001163028[345] = 0;
   out_2272821566001163028[346] = 0;
   out_2272821566001163028[347] = 0;
   out_2272821566001163028[348] = 0;
   out_2272821566001163028[349] = 0;
   out_2272821566001163028[350] = 0;
   out_2272821566001163028[351] = 0;
   out_2272821566001163028[352] = 1;
   out_2272821566001163028[353] = 0;
   out_2272821566001163028[354] = 0;
   out_2272821566001163028[355] = 0;
   out_2272821566001163028[356] = 0;
   out_2272821566001163028[357] = 0;
   out_2272821566001163028[358] = 0;
   out_2272821566001163028[359] = 0;
   out_2272821566001163028[360] = 0;
   out_2272821566001163028[361] = 0;
   out_2272821566001163028[362] = 0;
   out_2272821566001163028[363] = 0;
   out_2272821566001163028[364] = 0;
   out_2272821566001163028[365] = 0;
   out_2272821566001163028[366] = 0;
   out_2272821566001163028[367] = 0;
   out_2272821566001163028[368] = 0;
   out_2272821566001163028[369] = 0;
   out_2272821566001163028[370] = 0;
   out_2272821566001163028[371] = 0;
   out_2272821566001163028[372] = 0;
   out_2272821566001163028[373] = 0;
   out_2272821566001163028[374] = 1;
   out_2272821566001163028[375] = 0;
   out_2272821566001163028[376] = 0;
   out_2272821566001163028[377] = 0;
   out_2272821566001163028[378] = 0;
   out_2272821566001163028[379] = 0;
   out_2272821566001163028[380] = 0;
   out_2272821566001163028[381] = 0;
   out_2272821566001163028[382] = 0;
   out_2272821566001163028[383] = 0;
   out_2272821566001163028[384] = 0;
   out_2272821566001163028[385] = 0;
   out_2272821566001163028[386] = 0;
   out_2272821566001163028[387] = 0;
   out_2272821566001163028[388] = 0;
   out_2272821566001163028[389] = 0;
   out_2272821566001163028[390] = 0;
   out_2272821566001163028[391] = 0;
   out_2272821566001163028[392] = 0;
   out_2272821566001163028[393] = 0;
   out_2272821566001163028[394] = 0;
   out_2272821566001163028[395] = 0;
   out_2272821566001163028[396] = 1;
   out_2272821566001163028[397] = 0;
   out_2272821566001163028[398] = 0;
   out_2272821566001163028[399] = 0;
   out_2272821566001163028[400] = 0;
   out_2272821566001163028[401] = 0;
   out_2272821566001163028[402] = 0;
   out_2272821566001163028[403] = 0;
   out_2272821566001163028[404] = 0;
   out_2272821566001163028[405] = 0;
   out_2272821566001163028[406] = 0;
   out_2272821566001163028[407] = 0;
   out_2272821566001163028[408] = 0;
   out_2272821566001163028[409] = 0;
   out_2272821566001163028[410] = 0;
   out_2272821566001163028[411] = 0;
   out_2272821566001163028[412] = 0;
   out_2272821566001163028[413] = 0;
   out_2272821566001163028[414] = 0;
   out_2272821566001163028[415] = 0;
   out_2272821566001163028[416] = 0;
   out_2272821566001163028[417] = 0;
   out_2272821566001163028[418] = 1;
   out_2272821566001163028[419] = 0;
   out_2272821566001163028[420] = 0;
   out_2272821566001163028[421] = 0;
   out_2272821566001163028[422] = 0;
   out_2272821566001163028[423] = 0;
   out_2272821566001163028[424] = 0;
   out_2272821566001163028[425] = 0;
   out_2272821566001163028[426] = 0;
   out_2272821566001163028[427] = 0;
   out_2272821566001163028[428] = 0;
   out_2272821566001163028[429] = 0;
   out_2272821566001163028[430] = 0;
   out_2272821566001163028[431] = 0;
   out_2272821566001163028[432] = 0;
   out_2272821566001163028[433] = 0;
   out_2272821566001163028[434] = 0;
   out_2272821566001163028[435] = 0;
   out_2272821566001163028[436] = 0;
   out_2272821566001163028[437] = 0;
   out_2272821566001163028[438] = 0;
   out_2272821566001163028[439] = 0;
   out_2272821566001163028[440] = 1;
}
void h_4(double *state, double *unused, double *out_3772097625145546202) {
   out_3772097625145546202[0] = state[10] + state[13];
   out_3772097625145546202[1] = state[11] + state[14];
   out_3772097625145546202[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3391770475938062923) {
   out_3391770475938062923[0] = 0;
   out_3391770475938062923[1] = 0;
   out_3391770475938062923[2] = 0;
   out_3391770475938062923[3] = 0;
   out_3391770475938062923[4] = 0;
   out_3391770475938062923[5] = 0;
   out_3391770475938062923[6] = 0;
   out_3391770475938062923[7] = 0;
   out_3391770475938062923[8] = 0;
   out_3391770475938062923[9] = 0;
   out_3391770475938062923[10] = 1;
   out_3391770475938062923[11] = 0;
   out_3391770475938062923[12] = 0;
   out_3391770475938062923[13] = 1;
   out_3391770475938062923[14] = 0;
   out_3391770475938062923[15] = 0;
   out_3391770475938062923[16] = 0;
   out_3391770475938062923[17] = 0;
   out_3391770475938062923[18] = 0;
   out_3391770475938062923[19] = 0;
   out_3391770475938062923[20] = 0;
   out_3391770475938062923[21] = 0;
   out_3391770475938062923[22] = 0;
   out_3391770475938062923[23] = 0;
   out_3391770475938062923[24] = 0;
   out_3391770475938062923[25] = 0;
   out_3391770475938062923[26] = 0;
   out_3391770475938062923[27] = 0;
   out_3391770475938062923[28] = 0;
   out_3391770475938062923[29] = 0;
   out_3391770475938062923[30] = 0;
   out_3391770475938062923[31] = 0;
   out_3391770475938062923[32] = 0;
   out_3391770475938062923[33] = 1;
   out_3391770475938062923[34] = 0;
   out_3391770475938062923[35] = 0;
   out_3391770475938062923[36] = 1;
   out_3391770475938062923[37] = 0;
   out_3391770475938062923[38] = 0;
   out_3391770475938062923[39] = 0;
   out_3391770475938062923[40] = 0;
   out_3391770475938062923[41] = 0;
   out_3391770475938062923[42] = 0;
   out_3391770475938062923[43] = 0;
   out_3391770475938062923[44] = 0;
   out_3391770475938062923[45] = 0;
   out_3391770475938062923[46] = 0;
   out_3391770475938062923[47] = 0;
   out_3391770475938062923[48] = 0;
   out_3391770475938062923[49] = 0;
   out_3391770475938062923[50] = 0;
   out_3391770475938062923[51] = 0;
   out_3391770475938062923[52] = 0;
   out_3391770475938062923[53] = 0;
   out_3391770475938062923[54] = 0;
   out_3391770475938062923[55] = 0;
   out_3391770475938062923[56] = 1;
   out_3391770475938062923[57] = 0;
   out_3391770475938062923[58] = 0;
   out_3391770475938062923[59] = 1;
   out_3391770475938062923[60] = 0;
   out_3391770475938062923[61] = 0;
   out_3391770475938062923[62] = 0;
   out_3391770475938062923[63] = 0;
   out_3391770475938062923[64] = 0;
   out_3391770475938062923[65] = 0;
}
void h_9(double *state, double *unused, double *out_1961205282106539496) {
   out_1961205282106539496[0] = state[10];
   out_1961205282106539496[1] = state[11];
   out_1961205282106539496[2] = state[12];
}
void H_9(double *state, double *unused, double *out_502908923657983581) {
   out_502908923657983581[0] = 0;
   out_502908923657983581[1] = 0;
   out_502908923657983581[2] = 0;
   out_502908923657983581[3] = 0;
   out_502908923657983581[4] = 0;
   out_502908923657983581[5] = 0;
   out_502908923657983581[6] = 0;
   out_502908923657983581[7] = 0;
   out_502908923657983581[8] = 0;
   out_502908923657983581[9] = 0;
   out_502908923657983581[10] = 1;
   out_502908923657983581[11] = 0;
   out_502908923657983581[12] = 0;
   out_502908923657983581[13] = 0;
   out_502908923657983581[14] = 0;
   out_502908923657983581[15] = 0;
   out_502908923657983581[16] = 0;
   out_502908923657983581[17] = 0;
   out_502908923657983581[18] = 0;
   out_502908923657983581[19] = 0;
   out_502908923657983581[20] = 0;
   out_502908923657983581[21] = 0;
   out_502908923657983581[22] = 0;
   out_502908923657983581[23] = 0;
   out_502908923657983581[24] = 0;
   out_502908923657983581[25] = 0;
   out_502908923657983581[26] = 0;
   out_502908923657983581[27] = 0;
   out_502908923657983581[28] = 0;
   out_502908923657983581[29] = 0;
   out_502908923657983581[30] = 0;
   out_502908923657983581[31] = 0;
   out_502908923657983581[32] = 0;
   out_502908923657983581[33] = 1;
   out_502908923657983581[34] = 0;
   out_502908923657983581[35] = 0;
   out_502908923657983581[36] = 0;
   out_502908923657983581[37] = 0;
   out_502908923657983581[38] = 0;
   out_502908923657983581[39] = 0;
   out_502908923657983581[40] = 0;
   out_502908923657983581[41] = 0;
   out_502908923657983581[42] = 0;
   out_502908923657983581[43] = 0;
   out_502908923657983581[44] = 0;
   out_502908923657983581[45] = 0;
   out_502908923657983581[46] = 0;
   out_502908923657983581[47] = 0;
   out_502908923657983581[48] = 0;
   out_502908923657983581[49] = 0;
   out_502908923657983581[50] = 0;
   out_502908923657983581[51] = 0;
   out_502908923657983581[52] = 0;
   out_502908923657983581[53] = 0;
   out_502908923657983581[54] = 0;
   out_502908923657983581[55] = 0;
   out_502908923657983581[56] = 1;
   out_502908923657983581[57] = 0;
   out_502908923657983581[58] = 0;
   out_502908923657983581[59] = 0;
   out_502908923657983581[60] = 0;
   out_502908923657983581[61] = 0;
   out_502908923657983581[62] = 0;
   out_502908923657983581[63] = 0;
   out_502908923657983581[64] = 0;
   out_502908923657983581[65] = 0;
}
void h_10(double *state, double *unused, double *out_1566763082912586440) {
   out_1566763082912586440[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1566763082912586440[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1566763082912586440[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7997271869951827050) {
   out_7997271869951827050[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7997271869951827050[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7997271869951827050[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7997271869951827050[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7997271869951827050[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7997271869951827050[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7997271869951827050[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7997271869951827050[7] = 0;
   out_7997271869951827050[8] = 0;
   out_7997271869951827050[9] = 0;
   out_7997271869951827050[10] = 0;
   out_7997271869951827050[11] = 0;
   out_7997271869951827050[12] = 0;
   out_7997271869951827050[13] = 0;
   out_7997271869951827050[14] = 0;
   out_7997271869951827050[15] = 0;
   out_7997271869951827050[16] = 1;
   out_7997271869951827050[17] = 0;
   out_7997271869951827050[18] = 0;
   out_7997271869951827050[19] = 1;
   out_7997271869951827050[20] = 0;
   out_7997271869951827050[21] = 0;
   out_7997271869951827050[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7997271869951827050[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7997271869951827050[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7997271869951827050[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7997271869951827050[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7997271869951827050[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7997271869951827050[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7997271869951827050[29] = 0;
   out_7997271869951827050[30] = 0;
   out_7997271869951827050[31] = 0;
   out_7997271869951827050[32] = 0;
   out_7997271869951827050[33] = 0;
   out_7997271869951827050[34] = 0;
   out_7997271869951827050[35] = 0;
   out_7997271869951827050[36] = 0;
   out_7997271869951827050[37] = 0;
   out_7997271869951827050[38] = 0;
   out_7997271869951827050[39] = 1;
   out_7997271869951827050[40] = 0;
   out_7997271869951827050[41] = 0;
   out_7997271869951827050[42] = 1;
   out_7997271869951827050[43] = 0;
   out_7997271869951827050[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7997271869951827050[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7997271869951827050[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7997271869951827050[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7997271869951827050[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7997271869951827050[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7997271869951827050[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7997271869951827050[51] = 0;
   out_7997271869951827050[52] = 0;
   out_7997271869951827050[53] = 0;
   out_7997271869951827050[54] = 0;
   out_7997271869951827050[55] = 0;
   out_7997271869951827050[56] = 0;
   out_7997271869951827050[57] = 0;
   out_7997271869951827050[58] = 0;
   out_7997271869951827050[59] = 0;
   out_7997271869951827050[60] = 0;
   out_7997271869951827050[61] = 0;
   out_7997271869951827050[62] = 1;
   out_7997271869951827050[63] = 0;
   out_7997271869951827050[64] = 0;
   out_7997271869951827050[65] = 1;
}
void h_12(double *state, double *unused, double *out_3013028664800893947) {
   out_3013028664800893947[0] = state[0];
   out_3013028664800893947[1] = state[1];
   out_3013028664800893947[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2770671450890469256) {
   out_2770671450890469256[0] = 1;
   out_2770671450890469256[1] = 0;
   out_2770671450890469256[2] = 0;
   out_2770671450890469256[3] = 0;
   out_2770671450890469256[4] = 0;
   out_2770671450890469256[5] = 0;
   out_2770671450890469256[6] = 0;
   out_2770671450890469256[7] = 0;
   out_2770671450890469256[8] = 0;
   out_2770671450890469256[9] = 0;
   out_2770671450890469256[10] = 0;
   out_2770671450890469256[11] = 0;
   out_2770671450890469256[12] = 0;
   out_2770671450890469256[13] = 0;
   out_2770671450890469256[14] = 0;
   out_2770671450890469256[15] = 0;
   out_2770671450890469256[16] = 0;
   out_2770671450890469256[17] = 0;
   out_2770671450890469256[18] = 0;
   out_2770671450890469256[19] = 0;
   out_2770671450890469256[20] = 0;
   out_2770671450890469256[21] = 0;
   out_2770671450890469256[22] = 0;
   out_2770671450890469256[23] = 1;
   out_2770671450890469256[24] = 0;
   out_2770671450890469256[25] = 0;
   out_2770671450890469256[26] = 0;
   out_2770671450890469256[27] = 0;
   out_2770671450890469256[28] = 0;
   out_2770671450890469256[29] = 0;
   out_2770671450890469256[30] = 0;
   out_2770671450890469256[31] = 0;
   out_2770671450890469256[32] = 0;
   out_2770671450890469256[33] = 0;
   out_2770671450890469256[34] = 0;
   out_2770671450890469256[35] = 0;
   out_2770671450890469256[36] = 0;
   out_2770671450890469256[37] = 0;
   out_2770671450890469256[38] = 0;
   out_2770671450890469256[39] = 0;
   out_2770671450890469256[40] = 0;
   out_2770671450890469256[41] = 0;
   out_2770671450890469256[42] = 0;
   out_2770671450890469256[43] = 0;
   out_2770671450890469256[44] = 0;
   out_2770671450890469256[45] = 0;
   out_2770671450890469256[46] = 1;
   out_2770671450890469256[47] = 0;
   out_2770671450890469256[48] = 0;
   out_2770671450890469256[49] = 0;
   out_2770671450890469256[50] = 0;
   out_2770671450890469256[51] = 0;
   out_2770671450890469256[52] = 0;
   out_2770671450890469256[53] = 0;
   out_2770671450890469256[54] = 0;
   out_2770671450890469256[55] = 0;
   out_2770671450890469256[56] = 0;
   out_2770671450890469256[57] = 0;
   out_2770671450890469256[58] = 0;
   out_2770671450890469256[59] = 0;
   out_2770671450890469256[60] = 0;
   out_2770671450890469256[61] = 0;
   out_2770671450890469256[62] = 0;
   out_2770671450890469256[63] = 0;
   out_2770671450890469256[64] = 0;
   out_2770671450890469256[65] = 0;
}
void h_31(double *state, double *unused, double *out_7147559448430490051) {
   out_7147559448430490051[0] = state[7];
   out_7147559448430490051[1] = state[8];
   out_7147559448430490051[2] = state[9];
}
void H_31(double *state, double *unused, double *out_25108418565455547) {
   out_25108418565455547[0] = 0;
   out_25108418565455547[1] = 0;
   out_25108418565455547[2] = 0;
   out_25108418565455547[3] = 0;
   out_25108418565455547[4] = 0;
   out_25108418565455547[5] = 0;
   out_25108418565455547[6] = 0;
   out_25108418565455547[7] = 1;
   out_25108418565455547[8] = 0;
   out_25108418565455547[9] = 0;
   out_25108418565455547[10] = 0;
   out_25108418565455547[11] = 0;
   out_25108418565455547[12] = 0;
   out_25108418565455547[13] = 0;
   out_25108418565455547[14] = 0;
   out_25108418565455547[15] = 0;
   out_25108418565455547[16] = 0;
   out_25108418565455547[17] = 0;
   out_25108418565455547[18] = 0;
   out_25108418565455547[19] = 0;
   out_25108418565455547[20] = 0;
   out_25108418565455547[21] = 0;
   out_25108418565455547[22] = 0;
   out_25108418565455547[23] = 0;
   out_25108418565455547[24] = 0;
   out_25108418565455547[25] = 0;
   out_25108418565455547[26] = 0;
   out_25108418565455547[27] = 0;
   out_25108418565455547[28] = 0;
   out_25108418565455547[29] = 0;
   out_25108418565455547[30] = 1;
   out_25108418565455547[31] = 0;
   out_25108418565455547[32] = 0;
   out_25108418565455547[33] = 0;
   out_25108418565455547[34] = 0;
   out_25108418565455547[35] = 0;
   out_25108418565455547[36] = 0;
   out_25108418565455547[37] = 0;
   out_25108418565455547[38] = 0;
   out_25108418565455547[39] = 0;
   out_25108418565455547[40] = 0;
   out_25108418565455547[41] = 0;
   out_25108418565455547[42] = 0;
   out_25108418565455547[43] = 0;
   out_25108418565455547[44] = 0;
   out_25108418565455547[45] = 0;
   out_25108418565455547[46] = 0;
   out_25108418565455547[47] = 0;
   out_25108418565455547[48] = 0;
   out_25108418565455547[49] = 0;
   out_25108418565455547[50] = 0;
   out_25108418565455547[51] = 0;
   out_25108418565455547[52] = 0;
   out_25108418565455547[53] = 1;
   out_25108418565455547[54] = 0;
   out_25108418565455547[55] = 0;
   out_25108418565455547[56] = 0;
   out_25108418565455547[57] = 0;
   out_25108418565455547[58] = 0;
   out_25108418565455547[59] = 0;
   out_25108418565455547[60] = 0;
   out_25108418565455547[61] = 0;
   out_25108418565455547[62] = 0;
   out_25108418565455547[63] = 0;
   out_25108418565455547[64] = 0;
   out_25108418565455547[65] = 0;
}
void h_32(double *state, double *unused, double *out_351136401439433302) {
   out_351136401439433302[0] = state[3];
   out_351136401439433302[1] = state[4];
   out_351136401439433302[2] = state[5];
   out_351136401439433302[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5776195953642157011) {
   out_5776195953642157011[0] = 0;
   out_5776195953642157011[1] = 0;
   out_5776195953642157011[2] = 0;
   out_5776195953642157011[3] = 1;
   out_5776195953642157011[4] = 0;
   out_5776195953642157011[5] = 0;
   out_5776195953642157011[6] = 0;
   out_5776195953642157011[7] = 0;
   out_5776195953642157011[8] = 0;
   out_5776195953642157011[9] = 0;
   out_5776195953642157011[10] = 0;
   out_5776195953642157011[11] = 0;
   out_5776195953642157011[12] = 0;
   out_5776195953642157011[13] = 0;
   out_5776195953642157011[14] = 0;
   out_5776195953642157011[15] = 0;
   out_5776195953642157011[16] = 0;
   out_5776195953642157011[17] = 0;
   out_5776195953642157011[18] = 0;
   out_5776195953642157011[19] = 0;
   out_5776195953642157011[20] = 0;
   out_5776195953642157011[21] = 0;
   out_5776195953642157011[22] = 0;
   out_5776195953642157011[23] = 0;
   out_5776195953642157011[24] = 0;
   out_5776195953642157011[25] = 0;
   out_5776195953642157011[26] = 1;
   out_5776195953642157011[27] = 0;
   out_5776195953642157011[28] = 0;
   out_5776195953642157011[29] = 0;
   out_5776195953642157011[30] = 0;
   out_5776195953642157011[31] = 0;
   out_5776195953642157011[32] = 0;
   out_5776195953642157011[33] = 0;
   out_5776195953642157011[34] = 0;
   out_5776195953642157011[35] = 0;
   out_5776195953642157011[36] = 0;
   out_5776195953642157011[37] = 0;
   out_5776195953642157011[38] = 0;
   out_5776195953642157011[39] = 0;
   out_5776195953642157011[40] = 0;
   out_5776195953642157011[41] = 0;
   out_5776195953642157011[42] = 0;
   out_5776195953642157011[43] = 0;
   out_5776195953642157011[44] = 0;
   out_5776195953642157011[45] = 0;
   out_5776195953642157011[46] = 0;
   out_5776195953642157011[47] = 0;
   out_5776195953642157011[48] = 0;
   out_5776195953642157011[49] = 1;
   out_5776195953642157011[50] = 0;
   out_5776195953642157011[51] = 0;
   out_5776195953642157011[52] = 0;
   out_5776195953642157011[53] = 0;
   out_5776195953642157011[54] = 0;
   out_5776195953642157011[55] = 0;
   out_5776195953642157011[56] = 0;
   out_5776195953642157011[57] = 0;
   out_5776195953642157011[58] = 0;
   out_5776195953642157011[59] = 0;
   out_5776195953642157011[60] = 0;
   out_5776195953642157011[61] = 0;
   out_5776195953642157011[62] = 0;
   out_5776195953642157011[63] = 0;
   out_5776195953642157011[64] = 0;
   out_5776195953642157011[65] = 0;
   out_5776195953642157011[66] = 0;
   out_5776195953642157011[67] = 0;
   out_5776195953642157011[68] = 0;
   out_5776195953642157011[69] = 0;
   out_5776195953642157011[70] = 0;
   out_5776195953642157011[71] = 0;
   out_5776195953642157011[72] = 1;
   out_5776195953642157011[73] = 0;
   out_5776195953642157011[74] = 0;
   out_5776195953642157011[75] = 0;
   out_5776195953642157011[76] = 0;
   out_5776195953642157011[77] = 0;
   out_5776195953642157011[78] = 0;
   out_5776195953642157011[79] = 0;
   out_5776195953642157011[80] = 0;
   out_5776195953642157011[81] = 0;
   out_5776195953642157011[82] = 0;
   out_5776195953642157011[83] = 0;
   out_5776195953642157011[84] = 0;
   out_5776195953642157011[85] = 0;
   out_5776195953642157011[86] = 0;
   out_5776195953642157011[87] = 0;
}
void h_13(double *state, double *unused, double *out_3516376497702871266) {
   out_3516376497702871266[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3516376497702871266[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3516376497702871266[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_3583990703157424414) {
   out_3583990703157424414[0] = 0;
   out_3583990703157424414[1] = 0;
   out_3583990703157424414[2] = 0;
   out_3583990703157424414[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3583990703157424414[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3583990703157424414[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_3583990703157424414[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3583990703157424414[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_3583990703157424414[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_3583990703157424414[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_3583990703157424414[10] = 0;
   out_3583990703157424414[11] = 0;
   out_3583990703157424414[12] = 0;
   out_3583990703157424414[13] = 0;
   out_3583990703157424414[14] = 0;
   out_3583990703157424414[15] = 0;
   out_3583990703157424414[16] = 0;
   out_3583990703157424414[17] = 0;
   out_3583990703157424414[18] = 0;
   out_3583990703157424414[19] = 0;
   out_3583990703157424414[20] = 0;
   out_3583990703157424414[21] = 0;
   out_3583990703157424414[22] = 0;
   out_3583990703157424414[23] = 0;
   out_3583990703157424414[24] = 0;
   out_3583990703157424414[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3583990703157424414[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3583990703157424414[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3583990703157424414[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_3583990703157424414[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_3583990703157424414[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_3583990703157424414[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_3583990703157424414[32] = 0;
   out_3583990703157424414[33] = 0;
   out_3583990703157424414[34] = 0;
   out_3583990703157424414[35] = 0;
   out_3583990703157424414[36] = 0;
   out_3583990703157424414[37] = 0;
   out_3583990703157424414[38] = 0;
   out_3583990703157424414[39] = 0;
   out_3583990703157424414[40] = 0;
   out_3583990703157424414[41] = 0;
   out_3583990703157424414[42] = 0;
   out_3583990703157424414[43] = 0;
   out_3583990703157424414[44] = 0;
   out_3583990703157424414[45] = 0;
   out_3583990703157424414[46] = 0;
   out_3583990703157424414[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3583990703157424414[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_3583990703157424414[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3583990703157424414[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3583990703157424414[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_3583990703157424414[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_3583990703157424414[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_3583990703157424414[54] = 0;
   out_3583990703157424414[55] = 0;
   out_3583990703157424414[56] = 0;
   out_3583990703157424414[57] = 0;
   out_3583990703157424414[58] = 0;
   out_3583990703157424414[59] = 0;
   out_3583990703157424414[60] = 0;
   out_3583990703157424414[61] = 0;
   out_3583990703157424414[62] = 0;
   out_3583990703157424414[63] = 0;
   out_3583990703157424414[64] = 0;
   out_3583990703157424414[65] = 0;
}
void h_14(double *state, double *unused, double *out_1961205282106539496) {
   out_1961205282106539496[0] = state[10];
   out_1961205282106539496[1] = state[11];
   out_1961205282106539496[2] = state[12];
}
void H_14(double *state, double *unused, double *out_502908923657983581) {
   out_502908923657983581[0] = 0;
   out_502908923657983581[1] = 0;
   out_502908923657983581[2] = 0;
   out_502908923657983581[3] = 0;
   out_502908923657983581[4] = 0;
   out_502908923657983581[5] = 0;
   out_502908923657983581[6] = 0;
   out_502908923657983581[7] = 0;
   out_502908923657983581[8] = 0;
   out_502908923657983581[9] = 0;
   out_502908923657983581[10] = 1;
   out_502908923657983581[11] = 0;
   out_502908923657983581[12] = 0;
   out_502908923657983581[13] = 0;
   out_502908923657983581[14] = 0;
   out_502908923657983581[15] = 0;
   out_502908923657983581[16] = 0;
   out_502908923657983581[17] = 0;
   out_502908923657983581[18] = 0;
   out_502908923657983581[19] = 0;
   out_502908923657983581[20] = 0;
   out_502908923657983581[21] = 0;
   out_502908923657983581[22] = 0;
   out_502908923657983581[23] = 0;
   out_502908923657983581[24] = 0;
   out_502908923657983581[25] = 0;
   out_502908923657983581[26] = 0;
   out_502908923657983581[27] = 0;
   out_502908923657983581[28] = 0;
   out_502908923657983581[29] = 0;
   out_502908923657983581[30] = 0;
   out_502908923657983581[31] = 0;
   out_502908923657983581[32] = 0;
   out_502908923657983581[33] = 1;
   out_502908923657983581[34] = 0;
   out_502908923657983581[35] = 0;
   out_502908923657983581[36] = 0;
   out_502908923657983581[37] = 0;
   out_502908923657983581[38] = 0;
   out_502908923657983581[39] = 0;
   out_502908923657983581[40] = 0;
   out_502908923657983581[41] = 0;
   out_502908923657983581[42] = 0;
   out_502908923657983581[43] = 0;
   out_502908923657983581[44] = 0;
   out_502908923657983581[45] = 0;
   out_502908923657983581[46] = 0;
   out_502908923657983581[47] = 0;
   out_502908923657983581[48] = 0;
   out_502908923657983581[49] = 0;
   out_502908923657983581[50] = 0;
   out_502908923657983581[51] = 0;
   out_502908923657983581[52] = 0;
   out_502908923657983581[53] = 0;
   out_502908923657983581[54] = 0;
   out_502908923657983581[55] = 0;
   out_502908923657983581[56] = 1;
   out_502908923657983581[57] = 0;
   out_502908923657983581[58] = 0;
   out_502908923657983581[59] = 0;
   out_502908923657983581[60] = 0;
   out_502908923657983581[61] = 0;
   out_502908923657983581[62] = 0;
   out_502908923657983581[63] = 0;
   out_502908923657983581[64] = 0;
   out_502908923657983581[65] = 0;
}
void h_33(double *state, double *unused, double *out_1044032644426440076) {
   out_1044032644426440076[0] = state[16];
   out_1044032644426440076[1] = state[17];
   out_1044032644426440076[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3125448586073402057) {
   out_3125448586073402057[0] = 0;
   out_3125448586073402057[1] = 0;
   out_3125448586073402057[2] = 0;
   out_3125448586073402057[3] = 0;
   out_3125448586073402057[4] = 0;
   out_3125448586073402057[5] = 0;
   out_3125448586073402057[6] = 0;
   out_3125448586073402057[7] = 0;
   out_3125448586073402057[8] = 0;
   out_3125448586073402057[9] = 0;
   out_3125448586073402057[10] = 0;
   out_3125448586073402057[11] = 0;
   out_3125448586073402057[12] = 0;
   out_3125448586073402057[13] = 0;
   out_3125448586073402057[14] = 0;
   out_3125448586073402057[15] = 0;
   out_3125448586073402057[16] = 1;
   out_3125448586073402057[17] = 0;
   out_3125448586073402057[18] = 0;
   out_3125448586073402057[19] = 0;
   out_3125448586073402057[20] = 0;
   out_3125448586073402057[21] = 0;
   out_3125448586073402057[22] = 0;
   out_3125448586073402057[23] = 0;
   out_3125448586073402057[24] = 0;
   out_3125448586073402057[25] = 0;
   out_3125448586073402057[26] = 0;
   out_3125448586073402057[27] = 0;
   out_3125448586073402057[28] = 0;
   out_3125448586073402057[29] = 0;
   out_3125448586073402057[30] = 0;
   out_3125448586073402057[31] = 0;
   out_3125448586073402057[32] = 0;
   out_3125448586073402057[33] = 0;
   out_3125448586073402057[34] = 0;
   out_3125448586073402057[35] = 0;
   out_3125448586073402057[36] = 0;
   out_3125448586073402057[37] = 0;
   out_3125448586073402057[38] = 0;
   out_3125448586073402057[39] = 1;
   out_3125448586073402057[40] = 0;
   out_3125448586073402057[41] = 0;
   out_3125448586073402057[42] = 0;
   out_3125448586073402057[43] = 0;
   out_3125448586073402057[44] = 0;
   out_3125448586073402057[45] = 0;
   out_3125448586073402057[46] = 0;
   out_3125448586073402057[47] = 0;
   out_3125448586073402057[48] = 0;
   out_3125448586073402057[49] = 0;
   out_3125448586073402057[50] = 0;
   out_3125448586073402057[51] = 0;
   out_3125448586073402057[52] = 0;
   out_3125448586073402057[53] = 0;
   out_3125448586073402057[54] = 0;
   out_3125448586073402057[55] = 0;
   out_3125448586073402057[56] = 0;
   out_3125448586073402057[57] = 0;
   out_3125448586073402057[58] = 0;
   out_3125448586073402057[59] = 0;
   out_3125448586073402057[60] = 0;
   out_3125448586073402057[61] = 0;
   out_3125448586073402057[62] = 1;
   out_3125448586073402057[63] = 0;
   out_3125448586073402057[64] = 0;
   out_3125448586073402057[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6759259717540961999) {
  H(in_vec, out_6759259717540961999);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_712671743316778553) {
  err_fun(nom_x, delta_x, out_712671743316778553);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1551098332499718356) {
  inv_err_fun(nom_x, true_x, out_1551098332499718356);
}
void live_H_mod_fun(double *state, double *out_7646199264428369681) {
  H_mod_fun(state, out_7646199264428369681);
}
void live_f_fun(double *state, double dt, double *out_2537679088963151294) {
  f_fun(state,  dt, out_2537679088963151294);
}
void live_F_fun(double *state, double dt, double *out_2272821566001163028) {
  F_fun(state,  dt, out_2272821566001163028);
}
void live_h_4(double *state, double *unused, double *out_3772097625145546202) {
  h_4(state, unused, out_3772097625145546202);
}
void live_H_4(double *state, double *unused, double *out_3391770475938062923) {
  H_4(state, unused, out_3391770475938062923);
}
void live_h_9(double *state, double *unused, double *out_1961205282106539496) {
  h_9(state, unused, out_1961205282106539496);
}
void live_H_9(double *state, double *unused, double *out_502908923657983581) {
  H_9(state, unused, out_502908923657983581);
}
void live_h_10(double *state, double *unused, double *out_1566763082912586440) {
  h_10(state, unused, out_1566763082912586440);
}
void live_H_10(double *state, double *unused, double *out_7997271869951827050) {
  H_10(state, unused, out_7997271869951827050);
}
void live_h_12(double *state, double *unused, double *out_3013028664800893947) {
  h_12(state, unused, out_3013028664800893947);
}
void live_H_12(double *state, double *unused, double *out_2770671450890469256) {
  H_12(state, unused, out_2770671450890469256);
}
void live_h_31(double *state, double *unused, double *out_7147559448430490051) {
  h_31(state, unused, out_7147559448430490051);
}
void live_H_31(double *state, double *unused, double *out_25108418565455547) {
  H_31(state, unused, out_25108418565455547);
}
void live_h_32(double *state, double *unused, double *out_351136401439433302) {
  h_32(state, unused, out_351136401439433302);
}
void live_H_32(double *state, double *unused, double *out_5776195953642157011) {
  H_32(state, unused, out_5776195953642157011);
}
void live_h_13(double *state, double *unused, double *out_3516376497702871266) {
  h_13(state, unused, out_3516376497702871266);
}
void live_H_13(double *state, double *unused, double *out_3583990703157424414) {
  H_13(state, unused, out_3583990703157424414);
}
void live_h_14(double *state, double *unused, double *out_1961205282106539496) {
  h_14(state, unused, out_1961205282106539496);
}
void live_H_14(double *state, double *unused, double *out_502908923657983581) {
  H_14(state, unused, out_502908923657983581);
}
void live_h_33(double *state, double *unused, double *out_1044032644426440076) {
  h_33(state, unused, out_1044032644426440076);
}
void live_H_33(double *state, double *unused, double *out_3125448586073402057) {
  H_33(state, unused, out_3125448586073402057);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);

#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2878163332676000540) {
   out_2878163332676000540[0] = 0;
   out_2878163332676000540[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2878163332676000540[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2878163332676000540[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2878163332676000540[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2878163332676000540[5] = -sin(in_vec[1]);
   out_2878163332676000540[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2878163332676000540[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2878163332676000540[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2878163332676000540[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2878163332676000540[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2878163332676000540[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2878163332676000540[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2878163332676000540[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2878163332676000540[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2878163332676000540[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2878163332676000540[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2878163332676000540[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1459947820727129062) {
   out_1459947820727129062[0] = delta_x[0] + nom_x[0];
   out_1459947820727129062[1] = delta_x[1] + nom_x[1];
   out_1459947820727129062[2] = delta_x[2] + nom_x[2];
   out_1459947820727129062[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1459947820727129062[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1459947820727129062[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1459947820727129062[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1459947820727129062[7] = delta_x[6] + nom_x[7];
   out_1459947820727129062[8] = delta_x[7] + nom_x[8];
   out_1459947820727129062[9] = delta_x[8] + nom_x[9];
   out_1459947820727129062[10] = delta_x[9] + nom_x[10];
   out_1459947820727129062[11] = delta_x[10] + nom_x[11];
   out_1459947820727129062[12] = delta_x[11] + nom_x[12];
   out_1459947820727129062[13] = delta_x[12] + nom_x[13];
   out_1459947820727129062[14] = delta_x[13] + nom_x[14];
   out_1459947820727129062[15] = delta_x[14] + nom_x[15];
   out_1459947820727129062[16] = delta_x[15] + nom_x[16];
   out_1459947820727129062[17] = delta_x[16] + nom_x[17];
   out_1459947820727129062[18] = delta_x[17] + nom_x[18];
   out_1459947820727129062[19] = delta_x[18] + nom_x[19];
   out_1459947820727129062[20] = delta_x[19] + nom_x[20];
   out_1459947820727129062[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4470484474002255370) {
   out_4470484474002255370[0] = -nom_x[0] + true_x[0];
   out_4470484474002255370[1] = -nom_x[1] + true_x[1];
   out_4470484474002255370[2] = -nom_x[2] + true_x[2];
   out_4470484474002255370[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4470484474002255370[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4470484474002255370[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4470484474002255370[6] = -nom_x[7] + true_x[7];
   out_4470484474002255370[7] = -nom_x[8] + true_x[8];
   out_4470484474002255370[8] = -nom_x[9] + true_x[9];
   out_4470484474002255370[9] = -nom_x[10] + true_x[10];
   out_4470484474002255370[10] = -nom_x[11] + true_x[11];
   out_4470484474002255370[11] = -nom_x[12] + true_x[12];
   out_4470484474002255370[12] = -nom_x[13] + true_x[13];
   out_4470484474002255370[13] = -nom_x[14] + true_x[14];
   out_4470484474002255370[14] = -nom_x[15] + true_x[15];
   out_4470484474002255370[15] = -nom_x[16] + true_x[16];
   out_4470484474002255370[16] = -nom_x[17] + true_x[17];
   out_4470484474002255370[17] = -nom_x[18] + true_x[18];
   out_4470484474002255370[18] = -nom_x[19] + true_x[19];
   out_4470484474002255370[19] = -nom_x[20] + true_x[20];
   out_4470484474002255370[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7668485600411002239) {
   out_7668485600411002239[0] = 1.0;
   out_7668485600411002239[1] = 0;
   out_7668485600411002239[2] = 0;
   out_7668485600411002239[3] = 0;
   out_7668485600411002239[4] = 0;
   out_7668485600411002239[5] = 0;
   out_7668485600411002239[6] = 0;
   out_7668485600411002239[7] = 0;
   out_7668485600411002239[8] = 0;
   out_7668485600411002239[9] = 0;
   out_7668485600411002239[10] = 0;
   out_7668485600411002239[11] = 0;
   out_7668485600411002239[12] = 0;
   out_7668485600411002239[13] = 0;
   out_7668485600411002239[14] = 0;
   out_7668485600411002239[15] = 0;
   out_7668485600411002239[16] = 0;
   out_7668485600411002239[17] = 0;
   out_7668485600411002239[18] = 0;
   out_7668485600411002239[19] = 0;
   out_7668485600411002239[20] = 0;
   out_7668485600411002239[21] = 0;
   out_7668485600411002239[22] = 1.0;
   out_7668485600411002239[23] = 0;
   out_7668485600411002239[24] = 0;
   out_7668485600411002239[25] = 0;
   out_7668485600411002239[26] = 0;
   out_7668485600411002239[27] = 0;
   out_7668485600411002239[28] = 0;
   out_7668485600411002239[29] = 0;
   out_7668485600411002239[30] = 0;
   out_7668485600411002239[31] = 0;
   out_7668485600411002239[32] = 0;
   out_7668485600411002239[33] = 0;
   out_7668485600411002239[34] = 0;
   out_7668485600411002239[35] = 0;
   out_7668485600411002239[36] = 0;
   out_7668485600411002239[37] = 0;
   out_7668485600411002239[38] = 0;
   out_7668485600411002239[39] = 0;
   out_7668485600411002239[40] = 0;
   out_7668485600411002239[41] = 0;
   out_7668485600411002239[42] = 0;
   out_7668485600411002239[43] = 0;
   out_7668485600411002239[44] = 1.0;
   out_7668485600411002239[45] = 0;
   out_7668485600411002239[46] = 0;
   out_7668485600411002239[47] = 0;
   out_7668485600411002239[48] = 0;
   out_7668485600411002239[49] = 0;
   out_7668485600411002239[50] = 0;
   out_7668485600411002239[51] = 0;
   out_7668485600411002239[52] = 0;
   out_7668485600411002239[53] = 0;
   out_7668485600411002239[54] = 0;
   out_7668485600411002239[55] = 0;
   out_7668485600411002239[56] = 0;
   out_7668485600411002239[57] = 0;
   out_7668485600411002239[58] = 0;
   out_7668485600411002239[59] = 0;
   out_7668485600411002239[60] = 0;
   out_7668485600411002239[61] = 0;
   out_7668485600411002239[62] = 0;
   out_7668485600411002239[63] = 0;
   out_7668485600411002239[64] = 0;
   out_7668485600411002239[65] = 0;
   out_7668485600411002239[66] = -0.5*state[4];
   out_7668485600411002239[67] = -0.5*state[5];
   out_7668485600411002239[68] = -0.5*state[6];
   out_7668485600411002239[69] = 0;
   out_7668485600411002239[70] = 0;
   out_7668485600411002239[71] = 0;
   out_7668485600411002239[72] = 0;
   out_7668485600411002239[73] = 0;
   out_7668485600411002239[74] = 0;
   out_7668485600411002239[75] = 0;
   out_7668485600411002239[76] = 0;
   out_7668485600411002239[77] = 0;
   out_7668485600411002239[78] = 0;
   out_7668485600411002239[79] = 0;
   out_7668485600411002239[80] = 0;
   out_7668485600411002239[81] = 0;
   out_7668485600411002239[82] = 0;
   out_7668485600411002239[83] = 0;
   out_7668485600411002239[84] = 0;
   out_7668485600411002239[85] = 0;
   out_7668485600411002239[86] = 0;
   out_7668485600411002239[87] = 0.5*state[3];
   out_7668485600411002239[88] = 0.5*state[6];
   out_7668485600411002239[89] = -0.5*state[5];
   out_7668485600411002239[90] = 0;
   out_7668485600411002239[91] = 0;
   out_7668485600411002239[92] = 0;
   out_7668485600411002239[93] = 0;
   out_7668485600411002239[94] = 0;
   out_7668485600411002239[95] = 0;
   out_7668485600411002239[96] = 0;
   out_7668485600411002239[97] = 0;
   out_7668485600411002239[98] = 0;
   out_7668485600411002239[99] = 0;
   out_7668485600411002239[100] = 0;
   out_7668485600411002239[101] = 0;
   out_7668485600411002239[102] = 0;
   out_7668485600411002239[103] = 0;
   out_7668485600411002239[104] = 0;
   out_7668485600411002239[105] = 0;
   out_7668485600411002239[106] = 0;
   out_7668485600411002239[107] = 0;
   out_7668485600411002239[108] = -0.5*state[6];
   out_7668485600411002239[109] = 0.5*state[3];
   out_7668485600411002239[110] = 0.5*state[4];
   out_7668485600411002239[111] = 0;
   out_7668485600411002239[112] = 0;
   out_7668485600411002239[113] = 0;
   out_7668485600411002239[114] = 0;
   out_7668485600411002239[115] = 0;
   out_7668485600411002239[116] = 0;
   out_7668485600411002239[117] = 0;
   out_7668485600411002239[118] = 0;
   out_7668485600411002239[119] = 0;
   out_7668485600411002239[120] = 0;
   out_7668485600411002239[121] = 0;
   out_7668485600411002239[122] = 0;
   out_7668485600411002239[123] = 0;
   out_7668485600411002239[124] = 0;
   out_7668485600411002239[125] = 0;
   out_7668485600411002239[126] = 0;
   out_7668485600411002239[127] = 0;
   out_7668485600411002239[128] = 0;
   out_7668485600411002239[129] = 0.5*state[5];
   out_7668485600411002239[130] = -0.5*state[4];
   out_7668485600411002239[131] = 0.5*state[3];
   out_7668485600411002239[132] = 0;
   out_7668485600411002239[133] = 0;
   out_7668485600411002239[134] = 0;
   out_7668485600411002239[135] = 0;
   out_7668485600411002239[136] = 0;
   out_7668485600411002239[137] = 0;
   out_7668485600411002239[138] = 0;
   out_7668485600411002239[139] = 0;
   out_7668485600411002239[140] = 0;
   out_7668485600411002239[141] = 0;
   out_7668485600411002239[142] = 0;
   out_7668485600411002239[143] = 0;
   out_7668485600411002239[144] = 0;
   out_7668485600411002239[145] = 0;
   out_7668485600411002239[146] = 0;
   out_7668485600411002239[147] = 0;
   out_7668485600411002239[148] = 0;
   out_7668485600411002239[149] = 0;
   out_7668485600411002239[150] = 0;
   out_7668485600411002239[151] = 0;
   out_7668485600411002239[152] = 0;
   out_7668485600411002239[153] = 1.0;
   out_7668485600411002239[154] = 0;
   out_7668485600411002239[155] = 0;
   out_7668485600411002239[156] = 0;
   out_7668485600411002239[157] = 0;
   out_7668485600411002239[158] = 0;
   out_7668485600411002239[159] = 0;
   out_7668485600411002239[160] = 0;
   out_7668485600411002239[161] = 0;
   out_7668485600411002239[162] = 0;
   out_7668485600411002239[163] = 0;
   out_7668485600411002239[164] = 0;
   out_7668485600411002239[165] = 0;
   out_7668485600411002239[166] = 0;
   out_7668485600411002239[167] = 0;
   out_7668485600411002239[168] = 0;
   out_7668485600411002239[169] = 0;
   out_7668485600411002239[170] = 0;
   out_7668485600411002239[171] = 0;
   out_7668485600411002239[172] = 0;
   out_7668485600411002239[173] = 0;
   out_7668485600411002239[174] = 0;
   out_7668485600411002239[175] = 1.0;
   out_7668485600411002239[176] = 0;
   out_7668485600411002239[177] = 0;
   out_7668485600411002239[178] = 0;
   out_7668485600411002239[179] = 0;
   out_7668485600411002239[180] = 0;
   out_7668485600411002239[181] = 0;
   out_7668485600411002239[182] = 0;
   out_7668485600411002239[183] = 0;
   out_7668485600411002239[184] = 0;
   out_7668485600411002239[185] = 0;
   out_7668485600411002239[186] = 0;
   out_7668485600411002239[187] = 0;
   out_7668485600411002239[188] = 0;
   out_7668485600411002239[189] = 0;
   out_7668485600411002239[190] = 0;
   out_7668485600411002239[191] = 0;
   out_7668485600411002239[192] = 0;
   out_7668485600411002239[193] = 0;
   out_7668485600411002239[194] = 0;
   out_7668485600411002239[195] = 0;
   out_7668485600411002239[196] = 0;
   out_7668485600411002239[197] = 1.0;
   out_7668485600411002239[198] = 0;
   out_7668485600411002239[199] = 0;
   out_7668485600411002239[200] = 0;
   out_7668485600411002239[201] = 0;
   out_7668485600411002239[202] = 0;
   out_7668485600411002239[203] = 0;
   out_7668485600411002239[204] = 0;
   out_7668485600411002239[205] = 0;
   out_7668485600411002239[206] = 0;
   out_7668485600411002239[207] = 0;
   out_7668485600411002239[208] = 0;
   out_7668485600411002239[209] = 0;
   out_7668485600411002239[210] = 0;
   out_7668485600411002239[211] = 0;
   out_7668485600411002239[212] = 0;
   out_7668485600411002239[213] = 0;
   out_7668485600411002239[214] = 0;
   out_7668485600411002239[215] = 0;
   out_7668485600411002239[216] = 0;
   out_7668485600411002239[217] = 0;
   out_7668485600411002239[218] = 0;
   out_7668485600411002239[219] = 1.0;
   out_7668485600411002239[220] = 0;
   out_7668485600411002239[221] = 0;
   out_7668485600411002239[222] = 0;
   out_7668485600411002239[223] = 0;
   out_7668485600411002239[224] = 0;
   out_7668485600411002239[225] = 0;
   out_7668485600411002239[226] = 0;
   out_7668485600411002239[227] = 0;
   out_7668485600411002239[228] = 0;
   out_7668485600411002239[229] = 0;
   out_7668485600411002239[230] = 0;
   out_7668485600411002239[231] = 0;
   out_7668485600411002239[232] = 0;
   out_7668485600411002239[233] = 0;
   out_7668485600411002239[234] = 0;
   out_7668485600411002239[235] = 0;
   out_7668485600411002239[236] = 0;
   out_7668485600411002239[237] = 0;
   out_7668485600411002239[238] = 0;
   out_7668485600411002239[239] = 0;
   out_7668485600411002239[240] = 0;
   out_7668485600411002239[241] = 1.0;
   out_7668485600411002239[242] = 0;
   out_7668485600411002239[243] = 0;
   out_7668485600411002239[244] = 0;
   out_7668485600411002239[245] = 0;
   out_7668485600411002239[246] = 0;
   out_7668485600411002239[247] = 0;
   out_7668485600411002239[248] = 0;
   out_7668485600411002239[249] = 0;
   out_7668485600411002239[250] = 0;
   out_7668485600411002239[251] = 0;
   out_7668485600411002239[252] = 0;
   out_7668485600411002239[253] = 0;
   out_7668485600411002239[254] = 0;
   out_7668485600411002239[255] = 0;
   out_7668485600411002239[256] = 0;
   out_7668485600411002239[257] = 0;
   out_7668485600411002239[258] = 0;
   out_7668485600411002239[259] = 0;
   out_7668485600411002239[260] = 0;
   out_7668485600411002239[261] = 0;
   out_7668485600411002239[262] = 0;
   out_7668485600411002239[263] = 1.0;
   out_7668485600411002239[264] = 0;
   out_7668485600411002239[265] = 0;
   out_7668485600411002239[266] = 0;
   out_7668485600411002239[267] = 0;
   out_7668485600411002239[268] = 0;
   out_7668485600411002239[269] = 0;
   out_7668485600411002239[270] = 0;
   out_7668485600411002239[271] = 0;
   out_7668485600411002239[272] = 0;
   out_7668485600411002239[273] = 0;
   out_7668485600411002239[274] = 0;
   out_7668485600411002239[275] = 0;
   out_7668485600411002239[276] = 0;
   out_7668485600411002239[277] = 0;
   out_7668485600411002239[278] = 0;
   out_7668485600411002239[279] = 0;
   out_7668485600411002239[280] = 0;
   out_7668485600411002239[281] = 0;
   out_7668485600411002239[282] = 0;
   out_7668485600411002239[283] = 0;
   out_7668485600411002239[284] = 0;
   out_7668485600411002239[285] = 1.0;
   out_7668485600411002239[286] = 0;
   out_7668485600411002239[287] = 0;
   out_7668485600411002239[288] = 0;
   out_7668485600411002239[289] = 0;
   out_7668485600411002239[290] = 0;
   out_7668485600411002239[291] = 0;
   out_7668485600411002239[292] = 0;
   out_7668485600411002239[293] = 0;
   out_7668485600411002239[294] = 0;
   out_7668485600411002239[295] = 0;
   out_7668485600411002239[296] = 0;
   out_7668485600411002239[297] = 0;
   out_7668485600411002239[298] = 0;
   out_7668485600411002239[299] = 0;
   out_7668485600411002239[300] = 0;
   out_7668485600411002239[301] = 0;
   out_7668485600411002239[302] = 0;
   out_7668485600411002239[303] = 0;
   out_7668485600411002239[304] = 0;
   out_7668485600411002239[305] = 0;
   out_7668485600411002239[306] = 0;
   out_7668485600411002239[307] = 1.0;
   out_7668485600411002239[308] = 0;
   out_7668485600411002239[309] = 0;
   out_7668485600411002239[310] = 0;
   out_7668485600411002239[311] = 0;
   out_7668485600411002239[312] = 0;
   out_7668485600411002239[313] = 0;
   out_7668485600411002239[314] = 0;
   out_7668485600411002239[315] = 0;
   out_7668485600411002239[316] = 0;
   out_7668485600411002239[317] = 0;
   out_7668485600411002239[318] = 0;
   out_7668485600411002239[319] = 0;
   out_7668485600411002239[320] = 0;
   out_7668485600411002239[321] = 0;
   out_7668485600411002239[322] = 0;
   out_7668485600411002239[323] = 0;
   out_7668485600411002239[324] = 0;
   out_7668485600411002239[325] = 0;
   out_7668485600411002239[326] = 0;
   out_7668485600411002239[327] = 0;
   out_7668485600411002239[328] = 0;
   out_7668485600411002239[329] = 1.0;
   out_7668485600411002239[330] = 0;
   out_7668485600411002239[331] = 0;
   out_7668485600411002239[332] = 0;
   out_7668485600411002239[333] = 0;
   out_7668485600411002239[334] = 0;
   out_7668485600411002239[335] = 0;
   out_7668485600411002239[336] = 0;
   out_7668485600411002239[337] = 0;
   out_7668485600411002239[338] = 0;
   out_7668485600411002239[339] = 0;
   out_7668485600411002239[340] = 0;
   out_7668485600411002239[341] = 0;
   out_7668485600411002239[342] = 0;
   out_7668485600411002239[343] = 0;
   out_7668485600411002239[344] = 0;
   out_7668485600411002239[345] = 0;
   out_7668485600411002239[346] = 0;
   out_7668485600411002239[347] = 0;
   out_7668485600411002239[348] = 0;
   out_7668485600411002239[349] = 0;
   out_7668485600411002239[350] = 0;
   out_7668485600411002239[351] = 1.0;
   out_7668485600411002239[352] = 0;
   out_7668485600411002239[353] = 0;
   out_7668485600411002239[354] = 0;
   out_7668485600411002239[355] = 0;
   out_7668485600411002239[356] = 0;
   out_7668485600411002239[357] = 0;
   out_7668485600411002239[358] = 0;
   out_7668485600411002239[359] = 0;
   out_7668485600411002239[360] = 0;
   out_7668485600411002239[361] = 0;
   out_7668485600411002239[362] = 0;
   out_7668485600411002239[363] = 0;
   out_7668485600411002239[364] = 0;
   out_7668485600411002239[365] = 0;
   out_7668485600411002239[366] = 0;
   out_7668485600411002239[367] = 0;
   out_7668485600411002239[368] = 0;
   out_7668485600411002239[369] = 0;
   out_7668485600411002239[370] = 0;
   out_7668485600411002239[371] = 0;
   out_7668485600411002239[372] = 0;
   out_7668485600411002239[373] = 1.0;
   out_7668485600411002239[374] = 0;
   out_7668485600411002239[375] = 0;
   out_7668485600411002239[376] = 0;
   out_7668485600411002239[377] = 0;
   out_7668485600411002239[378] = 0;
   out_7668485600411002239[379] = 0;
   out_7668485600411002239[380] = 0;
   out_7668485600411002239[381] = 0;
   out_7668485600411002239[382] = 0;
   out_7668485600411002239[383] = 0;
   out_7668485600411002239[384] = 0;
   out_7668485600411002239[385] = 0;
   out_7668485600411002239[386] = 0;
   out_7668485600411002239[387] = 0;
   out_7668485600411002239[388] = 0;
   out_7668485600411002239[389] = 0;
   out_7668485600411002239[390] = 0;
   out_7668485600411002239[391] = 0;
   out_7668485600411002239[392] = 0;
   out_7668485600411002239[393] = 0;
   out_7668485600411002239[394] = 0;
   out_7668485600411002239[395] = 1.0;
   out_7668485600411002239[396] = 0;
   out_7668485600411002239[397] = 0;
   out_7668485600411002239[398] = 0;
   out_7668485600411002239[399] = 0;
   out_7668485600411002239[400] = 0;
   out_7668485600411002239[401] = 0;
   out_7668485600411002239[402] = 0;
   out_7668485600411002239[403] = 0;
   out_7668485600411002239[404] = 0;
   out_7668485600411002239[405] = 0;
   out_7668485600411002239[406] = 0;
   out_7668485600411002239[407] = 0;
   out_7668485600411002239[408] = 0;
   out_7668485600411002239[409] = 0;
   out_7668485600411002239[410] = 0;
   out_7668485600411002239[411] = 0;
   out_7668485600411002239[412] = 0;
   out_7668485600411002239[413] = 0;
   out_7668485600411002239[414] = 0;
   out_7668485600411002239[415] = 0;
   out_7668485600411002239[416] = 0;
   out_7668485600411002239[417] = 1.0;
   out_7668485600411002239[418] = 0;
   out_7668485600411002239[419] = 0;
   out_7668485600411002239[420] = 0;
   out_7668485600411002239[421] = 0;
   out_7668485600411002239[422] = 0;
   out_7668485600411002239[423] = 0;
   out_7668485600411002239[424] = 0;
   out_7668485600411002239[425] = 0;
   out_7668485600411002239[426] = 0;
   out_7668485600411002239[427] = 0;
   out_7668485600411002239[428] = 0;
   out_7668485600411002239[429] = 0;
   out_7668485600411002239[430] = 0;
   out_7668485600411002239[431] = 0;
   out_7668485600411002239[432] = 0;
   out_7668485600411002239[433] = 0;
   out_7668485600411002239[434] = 0;
   out_7668485600411002239[435] = 0;
   out_7668485600411002239[436] = 0;
   out_7668485600411002239[437] = 0;
   out_7668485600411002239[438] = 0;
   out_7668485600411002239[439] = 1.0;
   out_7668485600411002239[440] = 0;
   out_7668485600411002239[441] = 0;
   out_7668485600411002239[442] = 0;
   out_7668485600411002239[443] = 0;
   out_7668485600411002239[444] = 0;
   out_7668485600411002239[445] = 0;
   out_7668485600411002239[446] = 0;
   out_7668485600411002239[447] = 0;
   out_7668485600411002239[448] = 0;
   out_7668485600411002239[449] = 0;
   out_7668485600411002239[450] = 0;
   out_7668485600411002239[451] = 0;
   out_7668485600411002239[452] = 0;
   out_7668485600411002239[453] = 0;
   out_7668485600411002239[454] = 0;
   out_7668485600411002239[455] = 0;
   out_7668485600411002239[456] = 0;
   out_7668485600411002239[457] = 0;
   out_7668485600411002239[458] = 0;
   out_7668485600411002239[459] = 0;
   out_7668485600411002239[460] = 0;
   out_7668485600411002239[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1547214029111368966) {
   out_1547214029111368966[0] = dt*state[7] + state[0];
   out_1547214029111368966[1] = dt*state[8] + state[1];
   out_1547214029111368966[2] = dt*state[9] + state[2];
   out_1547214029111368966[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1547214029111368966[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1547214029111368966[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1547214029111368966[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1547214029111368966[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1547214029111368966[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1547214029111368966[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1547214029111368966[10] = state[10];
   out_1547214029111368966[11] = state[11];
   out_1547214029111368966[12] = state[12];
   out_1547214029111368966[13] = state[13];
   out_1547214029111368966[14] = state[14];
   out_1547214029111368966[15] = state[15];
   out_1547214029111368966[16] = state[16];
   out_1547214029111368966[17] = state[17];
   out_1547214029111368966[18] = state[18];
   out_1547214029111368966[19] = state[19];
   out_1547214029111368966[20] = state[20];
   out_1547214029111368966[21] = state[21];
}
void F_fun(double *state, double dt, double *out_288403762753222131) {
   out_288403762753222131[0] = 1;
   out_288403762753222131[1] = 0;
   out_288403762753222131[2] = 0;
   out_288403762753222131[3] = 0;
   out_288403762753222131[4] = 0;
   out_288403762753222131[5] = 0;
   out_288403762753222131[6] = dt;
   out_288403762753222131[7] = 0;
   out_288403762753222131[8] = 0;
   out_288403762753222131[9] = 0;
   out_288403762753222131[10] = 0;
   out_288403762753222131[11] = 0;
   out_288403762753222131[12] = 0;
   out_288403762753222131[13] = 0;
   out_288403762753222131[14] = 0;
   out_288403762753222131[15] = 0;
   out_288403762753222131[16] = 0;
   out_288403762753222131[17] = 0;
   out_288403762753222131[18] = 0;
   out_288403762753222131[19] = 0;
   out_288403762753222131[20] = 0;
   out_288403762753222131[21] = 0;
   out_288403762753222131[22] = 1;
   out_288403762753222131[23] = 0;
   out_288403762753222131[24] = 0;
   out_288403762753222131[25] = 0;
   out_288403762753222131[26] = 0;
   out_288403762753222131[27] = 0;
   out_288403762753222131[28] = dt;
   out_288403762753222131[29] = 0;
   out_288403762753222131[30] = 0;
   out_288403762753222131[31] = 0;
   out_288403762753222131[32] = 0;
   out_288403762753222131[33] = 0;
   out_288403762753222131[34] = 0;
   out_288403762753222131[35] = 0;
   out_288403762753222131[36] = 0;
   out_288403762753222131[37] = 0;
   out_288403762753222131[38] = 0;
   out_288403762753222131[39] = 0;
   out_288403762753222131[40] = 0;
   out_288403762753222131[41] = 0;
   out_288403762753222131[42] = 0;
   out_288403762753222131[43] = 0;
   out_288403762753222131[44] = 1;
   out_288403762753222131[45] = 0;
   out_288403762753222131[46] = 0;
   out_288403762753222131[47] = 0;
   out_288403762753222131[48] = 0;
   out_288403762753222131[49] = 0;
   out_288403762753222131[50] = dt;
   out_288403762753222131[51] = 0;
   out_288403762753222131[52] = 0;
   out_288403762753222131[53] = 0;
   out_288403762753222131[54] = 0;
   out_288403762753222131[55] = 0;
   out_288403762753222131[56] = 0;
   out_288403762753222131[57] = 0;
   out_288403762753222131[58] = 0;
   out_288403762753222131[59] = 0;
   out_288403762753222131[60] = 0;
   out_288403762753222131[61] = 0;
   out_288403762753222131[62] = 0;
   out_288403762753222131[63] = 0;
   out_288403762753222131[64] = 0;
   out_288403762753222131[65] = 0;
   out_288403762753222131[66] = 1;
   out_288403762753222131[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_288403762753222131[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_288403762753222131[69] = 0;
   out_288403762753222131[70] = 0;
   out_288403762753222131[71] = 0;
   out_288403762753222131[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_288403762753222131[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_288403762753222131[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_288403762753222131[75] = 0;
   out_288403762753222131[76] = 0;
   out_288403762753222131[77] = 0;
   out_288403762753222131[78] = 0;
   out_288403762753222131[79] = 0;
   out_288403762753222131[80] = 0;
   out_288403762753222131[81] = 0;
   out_288403762753222131[82] = 0;
   out_288403762753222131[83] = 0;
   out_288403762753222131[84] = 0;
   out_288403762753222131[85] = 0;
   out_288403762753222131[86] = 0;
   out_288403762753222131[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_288403762753222131[88] = 1;
   out_288403762753222131[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_288403762753222131[90] = 0;
   out_288403762753222131[91] = 0;
   out_288403762753222131[92] = 0;
   out_288403762753222131[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_288403762753222131[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_288403762753222131[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_288403762753222131[96] = 0;
   out_288403762753222131[97] = 0;
   out_288403762753222131[98] = 0;
   out_288403762753222131[99] = 0;
   out_288403762753222131[100] = 0;
   out_288403762753222131[101] = 0;
   out_288403762753222131[102] = 0;
   out_288403762753222131[103] = 0;
   out_288403762753222131[104] = 0;
   out_288403762753222131[105] = 0;
   out_288403762753222131[106] = 0;
   out_288403762753222131[107] = 0;
   out_288403762753222131[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_288403762753222131[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_288403762753222131[110] = 1;
   out_288403762753222131[111] = 0;
   out_288403762753222131[112] = 0;
   out_288403762753222131[113] = 0;
   out_288403762753222131[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_288403762753222131[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_288403762753222131[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_288403762753222131[117] = 0;
   out_288403762753222131[118] = 0;
   out_288403762753222131[119] = 0;
   out_288403762753222131[120] = 0;
   out_288403762753222131[121] = 0;
   out_288403762753222131[122] = 0;
   out_288403762753222131[123] = 0;
   out_288403762753222131[124] = 0;
   out_288403762753222131[125] = 0;
   out_288403762753222131[126] = 0;
   out_288403762753222131[127] = 0;
   out_288403762753222131[128] = 0;
   out_288403762753222131[129] = 0;
   out_288403762753222131[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_288403762753222131[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_288403762753222131[132] = 1;
   out_288403762753222131[133] = 0;
   out_288403762753222131[134] = 0;
   out_288403762753222131[135] = 0;
   out_288403762753222131[136] = 0;
   out_288403762753222131[137] = 0;
   out_288403762753222131[138] = 0;
   out_288403762753222131[139] = 0;
   out_288403762753222131[140] = 0;
   out_288403762753222131[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_288403762753222131[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_288403762753222131[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_288403762753222131[144] = 0;
   out_288403762753222131[145] = 0;
   out_288403762753222131[146] = 0;
   out_288403762753222131[147] = 0;
   out_288403762753222131[148] = 0;
   out_288403762753222131[149] = 0;
   out_288403762753222131[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_288403762753222131[151] = 0;
   out_288403762753222131[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_288403762753222131[153] = 0;
   out_288403762753222131[154] = 1;
   out_288403762753222131[155] = 0;
   out_288403762753222131[156] = 0;
   out_288403762753222131[157] = 0;
   out_288403762753222131[158] = 0;
   out_288403762753222131[159] = 0;
   out_288403762753222131[160] = 0;
   out_288403762753222131[161] = 0;
   out_288403762753222131[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_288403762753222131[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_288403762753222131[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_288403762753222131[165] = 0;
   out_288403762753222131[166] = 0;
   out_288403762753222131[167] = 0;
   out_288403762753222131[168] = 0;
   out_288403762753222131[169] = 0;
   out_288403762753222131[170] = 0;
   out_288403762753222131[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_288403762753222131[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_288403762753222131[173] = 0;
   out_288403762753222131[174] = 0;
   out_288403762753222131[175] = 0;
   out_288403762753222131[176] = 1;
   out_288403762753222131[177] = 0;
   out_288403762753222131[178] = 0;
   out_288403762753222131[179] = 0;
   out_288403762753222131[180] = 0;
   out_288403762753222131[181] = 0;
   out_288403762753222131[182] = 0;
   out_288403762753222131[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_288403762753222131[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_288403762753222131[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_288403762753222131[186] = 0;
   out_288403762753222131[187] = 0;
   out_288403762753222131[188] = 0;
   out_288403762753222131[189] = 0;
   out_288403762753222131[190] = 0;
   out_288403762753222131[191] = 0;
   out_288403762753222131[192] = 0;
   out_288403762753222131[193] = 0;
   out_288403762753222131[194] = 0;
   out_288403762753222131[195] = 0;
   out_288403762753222131[196] = 0;
   out_288403762753222131[197] = 0;
   out_288403762753222131[198] = 1;
   out_288403762753222131[199] = 0;
   out_288403762753222131[200] = 0;
   out_288403762753222131[201] = 0;
   out_288403762753222131[202] = 0;
   out_288403762753222131[203] = 0;
   out_288403762753222131[204] = 0;
   out_288403762753222131[205] = 0;
   out_288403762753222131[206] = 0;
   out_288403762753222131[207] = 0;
   out_288403762753222131[208] = 0;
   out_288403762753222131[209] = 0;
   out_288403762753222131[210] = 0;
   out_288403762753222131[211] = 0;
   out_288403762753222131[212] = 0;
   out_288403762753222131[213] = 0;
   out_288403762753222131[214] = 0;
   out_288403762753222131[215] = 0;
   out_288403762753222131[216] = 0;
   out_288403762753222131[217] = 0;
   out_288403762753222131[218] = 0;
   out_288403762753222131[219] = 0;
   out_288403762753222131[220] = 1;
   out_288403762753222131[221] = 0;
   out_288403762753222131[222] = 0;
   out_288403762753222131[223] = 0;
   out_288403762753222131[224] = 0;
   out_288403762753222131[225] = 0;
   out_288403762753222131[226] = 0;
   out_288403762753222131[227] = 0;
   out_288403762753222131[228] = 0;
   out_288403762753222131[229] = 0;
   out_288403762753222131[230] = 0;
   out_288403762753222131[231] = 0;
   out_288403762753222131[232] = 0;
   out_288403762753222131[233] = 0;
   out_288403762753222131[234] = 0;
   out_288403762753222131[235] = 0;
   out_288403762753222131[236] = 0;
   out_288403762753222131[237] = 0;
   out_288403762753222131[238] = 0;
   out_288403762753222131[239] = 0;
   out_288403762753222131[240] = 0;
   out_288403762753222131[241] = 0;
   out_288403762753222131[242] = 1;
   out_288403762753222131[243] = 0;
   out_288403762753222131[244] = 0;
   out_288403762753222131[245] = 0;
   out_288403762753222131[246] = 0;
   out_288403762753222131[247] = 0;
   out_288403762753222131[248] = 0;
   out_288403762753222131[249] = 0;
   out_288403762753222131[250] = 0;
   out_288403762753222131[251] = 0;
   out_288403762753222131[252] = 0;
   out_288403762753222131[253] = 0;
   out_288403762753222131[254] = 0;
   out_288403762753222131[255] = 0;
   out_288403762753222131[256] = 0;
   out_288403762753222131[257] = 0;
   out_288403762753222131[258] = 0;
   out_288403762753222131[259] = 0;
   out_288403762753222131[260] = 0;
   out_288403762753222131[261] = 0;
   out_288403762753222131[262] = 0;
   out_288403762753222131[263] = 0;
   out_288403762753222131[264] = 1;
   out_288403762753222131[265] = 0;
   out_288403762753222131[266] = 0;
   out_288403762753222131[267] = 0;
   out_288403762753222131[268] = 0;
   out_288403762753222131[269] = 0;
   out_288403762753222131[270] = 0;
   out_288403762753222131[271] = 0;
   out_288403762753222131[272] = 0;
   out_288403762753222131[273] = 0;
   out_288403762753222131[274] = 0;
   out_288403762753222131[275] = 0;
   out_288403762753222131[276] = 0;
   out_288403762753222131[277] = 0;
   out_288403762753222131[278] = 0;
   out_288403762753222131[279] = 0;
   out_288403762753222131[280] = 0;
   out_288403762753222131[281] = 0;
   out_288403762753222131[282] = 0;
   out_288403762753222131[283] = 0;
   out_288403762753222131[284] = 0;
   out_288403762753222131[285] = 0;
   out_288403762753222131[286] = 1;
   out_288403762753222131[287] = 0;
   out_288403762753222131[288] = 0;
   out_288403762753222131[289] = 0;
   out_288403762753222131[290] = 0;
   out_288403762753222131[291] = 0;
   out_288403762753222131[292] = 0;
   out_288403762753222131[293] = 0;
   out_288403762753222131[294] = 0;
   out_288403762753222131[295] = 0;
   out_288403762753222131[296] = 0;
   out_288403762753222131[297] = 0;
   out_288403762753222131[298] = 0;
   out_288403762753222131[299] = 0;
   out_288403762753222131[300] = 0;
   out_288403762753222131[301] = 0;
   out_288403762753222131[302] = 0;
   out_288403762753222131[303] = 0;
   out_288403762753222131[304] = 0;
   out_288403762753222131[305] = 0;
   out_288403762753222131[306] = 0;
   out_288403762753222131[307] = 0;
   out_288403762753222131[308] = 1;
   out_288403762753222131[309] = 0;
   out_288403762753222131[310] = 0;
   out_288403762753222131[311] = 0;
   out_288403762753222131[312] = 0;
   out_288403762753222131[313] = 0;
   out_288403762753222131[314] = 0;
   out_288403762753222131[315] = 0;
   out_288403762753222131[316] = 0;
   out_288403762753222131[317] = 0;
   out_288403762753222131[318] = 0;
   out_288403762753222131[319] = 0;
   out_288403762753222131[320] = 0;
   out_288403762753222131[321] = 0;
   out_288403762753222131[322] = 0;
   out_288403762753222131[323] = 0;
   out_288403762753222131[324] = 0;
   out_288403762753222131[325] = 0;
   out_288403762753222131[326] = 0;
   out_288403762753222131[327] = 0;
   out_288403762753222131[328] = 0;
   out_288403762753222131[329] = 0;
   out_288403762753222131[330] = 1;
   out_288403762753222131[331] = 0;
   out_288403762753222131[332] = 0;
   out_288403762753222131[333] = 0;
   out_288403762753222131[334] = 0;
   out_288403762753222131[335] = 0;
   out_288403762753222131[336] = 0;
   out_288403762753222131[337] = 0;
   out_288403762753222131[338] = 0;
   out_288403762753222131[339] = 0;
   out_288403762753222131[340] = 0;
   out_288403762753222131[341] = 0;
   out_288403762753222131[342] = 0;
   out_288403762753222131[343] = 0;
   out_288403762753222131[344] = 0;
   out_288403762753222131[345] = 0;
   out_288403762753222131[346] = 0;
   out_288403762753222131[347] = 0;
   out_288403762753222131[348] = 0;
   out_288403762753222131[349] = 0;
   out_288403762753222131[350] = 0;
   out_288403762753222131[351] = 0;
   out_288403762753222131[352] = 1;
   out_288403762753222131[353] = 0;
   out_288403762753222131[354] = 0;
   out_288403762753222131[355] = 0;
   out_288403762753222131[356] = 0;
   out_288403762753222131[357] = 0;
   out_288403762753222131[358] = 0;
   out_288403762753222131[359] = 0;
   out_288403762753222131[360] = 0;
   out_288403762753222131[361] = 0;
   out_288403762753222131[362] = 0;
   out_288403762753222131[363] = 0;
   out_288403762753222131[364] = 0;
   out_288403762753222131[365] = 0;
   out_288403762753222131[366] = 0;
   out_288403762753222131[367] = 0;
   out_288403762753222131[368] = 0;
   out_288403762753222131[369] = 0;
   out_288403762753222131[370] = 0;
   out_288403762753222131[371] = 0;
   out_288403762753222131[372] = 0;
   out_288403762753222131[373] = 0;
   out_288403762753222131[374] = 1;
   out_288403762753222131[375] = 0;
   out_288403762753222131[376] = 0;
   out_288403762753222131[377] = 0;
   out_288403762753222131[378] = 0;
   out_288403762753222131[379] = 0;
   out_288403762753222131[380] = 0;
   out_288403762753222131[381] = 0;
   out_288403762753222131[382] = 0;
   out_288403762753222131[383] = 0;
   out_288403762753222131[384] = 0;
   out_288403762753222131[385] = 0;
   out_288403762753222131[386] = 0;
   out_288403762753222131[387] = 0;
   out_288403762753222131[388] = 0;
   out_288403762753222131[389] = 0;
   out_288403762753222131[390] = 0;
   out_288403762753222131[391] = 0;
   out_288403762753222131[392] = 0;
   out_288403762753222131[393] = 0;
   out_288403762753222131[394] = 0;
   out_288403762753222131[395] = 0;
   out_288403762753222131[396] = 1;
   out_288403762753222131[397] = 0;
   out_288403762753222131[398] = 0;
   out_288403762753222131[399] = 0;
   out_288403762753222131[400] = 0;
   out_288403762753222131[401] = 0;
   out_288403762753222131[402] = 0;
   out_288403762753222131[403] = 0;
   out_288403762753222131[404] = 0;
   out_288403762753222131[405] = 0;
   out_288403762753222131[406] = 0;
   out_288403762753222131[407] = 0;
   out_288403762753222131[408] = 0;
   out_288403762753222131[409] = 0;
   out_288403762753222131[410] = 0;
   out_288403762753222131[411] = 0;
   out_288403762753222131[412] = 0;
   out_288403762753222131[413] = 0;
   out_288403762753222131[414] = 0;
   out_288403762753222131[415] = 0;
   out_288403762753222131[416] = 0;
   out_288403762753222131[417] = 0;
   out_288403762753222131[418] = 1;
   out_288403762753222131[419] = 0;
   out_288403762753222131[420] = 0;
   out_288403762753222131[421] = 0;
   out_288403762753222131[422] = 0;
   out_288403762753222131[423] = 0;
   out_288403762753222131[424] = 0;
   out_288403762753222131[425] = 0;
   out_288403762753222131[426] = 0;
   out_288403762753222131[427] = 0;
   out_288403762753222131[428] = 0;
   out_288403762753222131[429] = 0;
   out_288403762753222131[430] = 0;
   out_288403762753222131[431] = 0;
   out_288403762753222131[432] = 0;
   out_288403762753222131[433] = 0;
   out_288403762753222131[434] = 0;
   out_288403762753222131[435] = 0;
   out_288403762753222131[436] = 0;
   out_288403762753222131[437] = 0;
   out_288403762753222131[438] = 0;
   out_288403762753222131[439] = 0;
   out_288403762753222131[440] = 1;
}
void h_4(double *state, double *unused, double *out_7908376479176728560) {
   out_7908376479176728560[0] = state[10] + state[13];
   out_7908376479176728560[1] = state[11] + state[14];
   out_7908376479176728560[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_799079216110286149) {
   out_799079216110286149[0] = 0;
   out_799079216110286149[1] = 0;
   out_799079216110286149[2] = 0;
   out_799079216110286149[3] = 0;
   out_799079216110286149[4] = 0;
   out_799079216110286149[5] = 0;
   out_799079216110286149[6] = 0;
   out_799079216110286149[7] = 0;
   out_799079216110286149[8] = 0;
   out_799079216110286149[9] = 0;
   out_799079216110286149[10] = 1;
   out_799079216110286149[11] = 0;
   out_799079216110286149[12] = 0;
   out_799079216110286149[13] = 1;
   out_799079216110286149[14] = 0;
   out_799079216110286149[15] = 0;
   out_799079216110286149[16] = 0;
   out_799079216110286149[17] = 0;
   out_799079216110286149[18] = 0;
   out_799079216110286149[19] = 0;
   out_799079216110286149[20] = 0;
   out_799079216110286149[21] = 0;
   out_799079216110286149[22] = 0;
   out_799079216110286149[23] = 0;
   out_799079216110286149[24] = 0;
   out_799079216110286149[25] = 0;
   out_799079216110286149[26] = 0;
   out_799079216110286149[27] = 0;
   out_799079216110286149[28] = 0;
   out_799079216110286149[29] = 0;
   out_799079216110286149[30] = 0;
   out_799079216110286149[31] = 0;
   out_799079216110286149[32] = 0;
   out_799079216110286149[33] = 1;
   out_799079216110286149[34] = 0;
   out_799079216110286149[35] = 0;
   out_799079216110286149[36] = 1;
   out_799079216110286149[37] = 0;
   out_799079216110286149[38] = 0;
   out_799079216110286149[39] = 0;
   out_799079216110286149[40] = 0;
   out_799079216110286149[41] = 0;
   out_799079216110286149[42] = 0;
   out_799079216110286149[43] = 0;
   out_799079216110286149[44] = 0;
   out_799079216110286149[45] = 0;
   out_799079216110286149[46] = 0;
   out_799079216110286149[47] = 0;
   out_799079216110286149[48] = 0;
   out_799079216110286149[49] = 0;
   out_799079216110286149[50] = 0;
   out_799079216110286149[51] = 0;
   out_799079216110286149[52] = 0;
   out_799079216110286149[53] = 0;
   out_799079216110286149[54] = 0;
   out_799079216110286149[55] = 0;
   out_799079216110286149[56] = 1;
   out_799079216110286149[57] = 0;
   out_799079216110286149[58] = 0;
   out_799079216110286149[59] = 1;
   out_799079216110286149[60] = 0;
   out_799079216110286149[61] = 0;
   out_799079216110286149[62] = 0;
   out_799079216110286149[63] = 0;
   out_799079216110286149[64] = 0;
   out_799079216110286149[65] = 0;
}
void h_9(double *state, double *unused, double *out_6558772355698767102) {
   out_6558772355698767102[0] = state[10];
   out_6558772355698767102[1] = state[11];
   out_6558772355698767102[2] = state[12];
}
void H_9(double *state, double *unused, double *out_557889569480695504) {
   out_557889569480695504[0] = 0;
   out_557889569480695504[1] = 0;
   out_557889569480695504[2] = 0;
   out_557889569480695504[3] = 0;
   out_557889569480695504[4] = 0;
   out_557889569480695504[5] = 0;
   out_557889569480695504[6] = 0;
   out_557889569480695504[7] = 0;
   out_557889569480695504[8] = 0;
   out_557889569480695504[9] = 0;
   out_557889569480695504[10] = 1;
   out_557889569480695504[11] = 0;
   out_557889569480695504[12] = 0;
   out_557889569480695504[13] = 0;
   out_557889569480695504[14] = 0;
   out_557889569480695504[15] = 0;
   out_557889569480695504[16] = 0;
   out_557889569480695504[17] = 0;
   out_557889569480695504[18] = 0;
   out_557889569480695504[19] = 0;
   out_557889569480695504[20] = 0;
   out_557889569480695504[21] = 0;
   out_557889569480695504[22] = 0;
   out_557889569480695504[23] = 0;
   out_557889569480695504[24] = 0;
   out_557889569480695504[25] = 0;
   out_557889569480695504[26] = 0;
   out_557889569480695504[27] = 0;
   out_557889569480695504[28] = 0;
   out_557889569480695504[29] = 0;
   out_557889569480695504[30] = 0;
   out_557889569480695504[31] = 0;
   out_557889569480695504[32] = 0;
   out_557889569480695504[33] = 1;
   out_557889569480695504[34] = 0;
   out_557889569480695504[35] = 0;
   out_557889569480695504[36] = 0;
   out_557889569480695504[37] = 0;
   out_557889569480695504[38] = 0;
   out_557889569480695504[39] = 0;
   out_557889569480695504[40] = 0;
   out_557889569480695504[41] = 0;
   out_557889569480695504[42] = 0;
   out_557889569480695504[43] = 0;
   out_557889569480695504[44] = 0;
   out_557889569480695504[45] = 0;
   out_557889569480695504[46] = 0;
   out_557889569480695504[47] = 0;
   out_557889569480695504[48] = 0;
   out_557889569480695504[49] = 0;
   out_557889569480695504[50] = 0;
   out_557889569480695504[51] = 0;
   out_557889569480695504[52] = 0;
   out_557889569480695504[53] = 0;
   out_557889569480695504[54] = 0;
   out_557889569480695504[55] = 0;
   out_557889569480695504[56] = 1;
   out_557889569480695504[57] = 0;
   out_557889569480695504[58] = 0;
   out_557889569480695504[59] = 0;
   out_557889569480695504[60] = 0;
   out_557889569480695504[61] = 0;
   out_557889569480695504[62] = 0;
   out_557889569480695504[63] = 0;
   out_557889569480695504[64] = 0;
   out_557889569480695504[65] = 0;
}
void h_10(double *state, double *unused, double *out_1840225830705905829) {
   out_1840225830705905829[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1840225830705905829[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1840225830705905829[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6875568155516334644) {
   out_6875568155516334644[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6875568155516334644[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6875568155516334644[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6875568155516334644[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6875568155516334644[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6875568155516334644[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6875568155516334644[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6875568155516334644[7] = 0;
   out_6875568155516334644[8] = 0;
   out_6875568155516334644[9] = 0;
   out_6875568155516334644[10] = 0;
   out_6875568155516334644[11] = 0;
   out_6875568155516334644[12] = 0;
   out_6875568155516334644[13] = 0;
   out_6875568155516334644[14] = 0;
   out_6875568155516334644[15] = 0;
   out_6875568155516334644[16] = 1;
   out_6875568155516334644[17] = 0;
   out_6875568155516334644[18] = 0;
   out_6875568155516334644[19] = 1;
   out_6875568155516334644[20] = 0;
   out_6875568155516334644[21] = 0;
   out_6875568155516334644[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6875568155516334644[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6875568155516334644[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6875568155516334644[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6875568155516334644[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6875568155516334644[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6875568155516334644[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6875568155516334644[29] = 0;
   out_6875568155516334644[30] = 0;
   out_6875568155516334644[31] = 0;
   out_6875568155516334644[32] = 0;
   out_6875568155516334644[33] = 0;
   out_6875568155516334644[34] = 0;
   out_6875568155516334644[35] = 0;
   out_6875568155516334644[36] = 0;
   out_6875568155516334644[37] = 0;
   out_6875568155516334644[38] = 0;
   out_6875568155516334644[39] = 1;
   out_6875568155516334644[40] = 0;
   out_6875568155516334644[41] = 0;
   out_6875568155516334644[42] = 1;
   out_6875568155516334644[43] = 0;
   out_6875568155516334644[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6875568155516334644[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6875568155516334644[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6875568155516334644[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6875568155516334644[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6875568155516334644[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6875568155516334644[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6875568155516334644[51] = 0;
   out_6875568155516334644[52] = 0;
   out_6875568155516334644[53] = 0;
   out_6875568155516334644[54] = 0;
   out_6875568155516334644[55] = 0;
   out_6875568155516334644[56] = 0;
   out_6875568155516334644[57] = 0;
   out_6875568155516334644[58] = 0;
   out_6875568155516334644[59] = 0;
   out_6875568155516334644[60] = 0;
   out_6875568155516334644[61] = 0;
   out_6875568155516334644[62] = 1;
   out_6875568155516334644[63] = 0;
   out_6875568155516334644[64] = 0;
   out_6875568155516334644[65] = 1;
}
void h_12(double *state, double *unused, double *out_3938035012682619485) {
   out_3938035012682619485[0] = state[0];
   out_3938035012682619485[1] = state[1];
   out_3938035012682619485[2] = state[2];
}
void H_12(double *state, double *unused, double *out_177980191062692482) {
   out_177980191062692482[0] = 1;
   out_177980191062692482[1] = 0;
   out_177980191062692482[2] = 0;
   out_177980191062692482[3] = 0;
   out_177980191062692482[4] = 0;
   out_177980191062692482[5] = 0;
   out_177980191062692482[6] = 0;
   out_177980191062692482[7] = 0;
   out_177980191062692482[8] = 0;
   out_177980191062692482[9] = 0;
   out_177980191062692482[10] = 0;
   out_177980191062692482[11] = 0;
   out_177980191062692482[12] = 0;
   out_177980191062692482[13] = 0;
   out_177980191062692482[14] = 0;
   out_177980191062692482[15] = 0;
   out_177980191062692482[16] = 0;
   out_177980191062692482[17] = 0;
   out_177980191062692482[18] = 0;
   out_177980191062692482[19] = 0;
   out_177980191062692482[20] = 0;
   out_177980191062692482[21] = 0;
   out_177980191062692482[22] = 0;
   out_177980191062692482[23] = 1;
   out_177980191062692482[24] = 0;
   out_177980191062692482[25] = 0;
   out_177980191062692482[26] = 0;
   out_177980191062692482[27] = 0;
   out_177980191062692482[28] = 0;
   out_177980191062692482[29] = 0;
   out_177980191062692482[30] = 0;
   out_177980191062692482[31] = 0;
   out_177980191062692482[32] = 0;
   out_177980191062692482[33] = 0;
   out_177980191062692482[34] = 0;
   out_177980191062692482[35] = 0;
   out_177980191062692482[36] = 0;
   out_177980191062692482[37] = 0;
   out_177980191062692482[38] = 0;
   out_177980191062692482[39] = 0;
   out_177980191062692482[40] = 0;
   out_177980191062692482[41] = 0;
   out_177980191062692482[42] = 0;
   out_177980191062692482[43] = 0;
   out_177980191062692482[44] = 0;
   out_177980191062692482[45] = 0;
   out_177980191062692482[46] = 1;
   out_177980191062692482[47] = 0;
   out_177980191062692482[48] = 0;
   out_177980191062692482[49] = 0;
   out_177980191062692482[50] = 0;
   out_177980191062692482[51] = 0;
   out_177980191062692482[52] = 0;
   out_177980191062692482[53] = 0;
   out_177980191062692482[54] = 0;
   out_177980191062692482[55] = 0;
   out_177980191062692482[56] = 0;
   out_177980191062692482[57] = 0;
   out_177980191062692482[58] = 0;
   out_177980191062692482[59] = 0;
   out_177980191062692482[60] = 0;
   out_177980191062692482[61] = 0;
   out_177980191062692482[62] = 0;
   out_177980191062692482[63] = 0;
   out_177980191062692482[64] = 0;
   out_177980191062692482[65] = 0;
}
void h_31(double *state, double *unused, double *out_6069685274528503166) {
   out_6069685274528503166[0] = state[7];
   out_6069685274528503166[1] = state[8];
   out_6069685274528503166[2] = state[9];
}
void H_31(double *state, double *unused, double *out_2567582841262321227) {
   out_2567582841262321227[0] = 0;
   out_2567582841262321227[1] = 0;
   out_2567582841262321227[2] = 0;
   out_2567582841262321227[3] = 0;
   out_2567582841262321227[4] = 0;
   out_2567582841262321227[5] = 0;
   out_2567582841262321227[6] = 0;
   out_2567582841262321227[7] = 1;
   out_2567582841262321227[8] = 0;
   out_2567582841262321227[9] = 0;
   out_2567582841262321227[10] = 0;
   out_2567582841262321227[11] = 0;
   out_2567582841262321227[12] = 0;
   out_2567582841262321227[13] = 0;
   out_2567582841262321227[14] = 0;
   out_2567582841262321227[15] = 0;
   out_2567582841262321227[16] = 0;
   out_2567582841262321227[17] = 0;
   out_2567582841262321227[18] = 0;
   out_2567582841262321227[19] = 0;
   out_2567582841262321227[20] = 0;
   out_2567582841262321227[21] = 0;
   out_2567582841262321227[22] = 0;
   out_2567582841262321227[23] = 0;
   out_2567582841262321227[24] = 0;
   out_2567582841262321227[25] = 0;
   out_2567582841262321227[26] = 0;
   out_2567582841262321227[27] = 0;
   out_2567582841262321227[28] = 0;
   out_2567582841262321227[29] = 0;
   out_2567582841262321227[30] = 1;
   out_2567582841262321227[31] = 0;
   out_2567582841262321227[32] = 0;
   out_2567582841262321227[33] = 0;
   out_2567582841262321227[34] = 0;
   out_2567582841262321227[35] = 0;
   out_2567582841262321227[36] = 0;
   out_2567582841262321227[37] = 0;
   out_2567582841262321227[38] = 0;
   out_2567582841262321227[39] = 0;
   out_2567582841262321227[40] = 0;
   out_2567582841262321227[41] = 0;
   out_2567582841262321227[42] = 0;
   out_2567582841262321227[43] = 0;
   out_2567582841262321227[44] = 0;
   out_2567582841262321227[45] = 0;
   out_2567582841262321227[46] = 0;
   out_2567582841262321227[47] = 0;
   out_2567582841262321227[48] = 0;
   out_2567582841262321227[49] = 0;
   out_2567582841262321227[50] = 0;
   out_2567582841262321227[51] = 0;
   out_2567582841262321227[52] = 0;
   out_2567582841262321227[53] = 1;
   out_2567582841262321227[54] = 0;
   out_2567582841262321227[55] = 0;
   out_2567582841262321227[56] = 0;
   out_2567582841262321227[57] = 0;
   out_2567582841262321227[58] = 0;
   out_2567582841262321227[59] = 0;
   out_2567582841262321227[60] = 0;
   out_2567582841262321227[61] = 0;
   out_2567582841262321227[62] = 0;
   out_2567582841262321227[63] = 0;
   out_2567582841262321227[64] = 0;
   out_2567582841262321227[65] = 0;
}
void h_32(double *state, double *unused, double *out_7831050498024517196) {
   out_7831050498024517196[0] = state[3];
   out_7831050498024517196[1] = state[4];
   out_7831050498024517196[2] = state[5];
   out_7831050498024517196[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5351241005680738820) {
   out_5351241005680738820[0] = 0;
   out_5351241005680738820[1] = 0;
   out_5351241005680738820[2] = 0;
   out_5351241005680738820[3] = 1;
   out_5351241005680738820[4] = 0;
   out_5351241005680738820[5] = 0;
   out_5351241005680738820[6] = 0;
   out_5351241005680738820[7] = 0;
   out_5351241005680738820[8] = 0;
   out_5351241005680738820[9] = 0;
   out_5351241005680738820[10] = 0;
   out_5351241005680738820[11] = 0;
   out_5351241005680738820[12] = 0;
   out_5351241005680738820[13] = 0;
   out_5351241005680738820[14] = 0;
   out_5351241005680738820[15] = 0;
   out_5351241005680738820[16] = 0;
   out_5351241005680738820[17] = 0;
   out_5351241005680738820[18] = 0;
   out_5351241005680738820[19] = 0;
   out_5351241005680738820[20] = 0;
   out_5351241005680738820[21] = 0;
   out_5351241005680738820[22] = 0;
   out_5351241005680738820[23] = 0;
   out_5351241005680738820[24] = 0;
   out_5351241005680738820[25] = 0;
   out_5351241005680738820[26] = 1;
   out_5351241005680738820[27] = 0;
   out_5351241005680738820[28] = 0;
   out_5351241005680738820[29] = 0;
   out_5351241005680738820[30] = 0;
   out_5351241005680738820[31] = 0;
   out_5351241005680738820[32] = 0;
   out_5351241005680738820[33] = 0;
   out_5351241005680738820[34] = 0;
   out_5351241005680738820[35] = 0;
   out_5351241005680738820[36] = 0;
   out_5351241005680738820[37] = 0;
   out_5351241005680738820[38] = 0;
   out_5351241005680738820[39] = 0;
   out_5351241005680738820[40] = 0;
   out_5351241005680738820[41] = 0;
   out_5351241005680738820[42] = 0;
   out_5351241005680738820[43] = 0;
   out_5351241005680738820[44] = 0;
   out_5351241005680738820[45] = 0;
   out_5351241005680738820[46] = 0;
   out_5351241005680738820[47] = 0;
   out_5351241005680738820[48] = 0;
   out_5351241005680738820[49] = 1;
   out_5351241005680738820[50] = 0;
   out_5351241005680738820[51] = 0;
   out_5351241005680738820[52] = 0;
   out_5351241005680738820[53] = 0;
   out_5351241005680738820[54] = 0;
   out_5351241005680738820[55] = 0;
   out_5351241005680738820[56] = 0;
   out_5351241005680738820[57] = 0;
   out_5351241005680738820[58] = 0;
   out_5351241005680738820[59] = 0;
   out_5351241005680738820[60] = 0;
   out_5351241005680738820[61] = 0;
   out_5351241005680738820[62] = 0;
   out_5351241005680738820[63] = 0;
   out_5351241005680738820[64] = 0;
   out_5351241005680738820[65] = 0;
   out_5351241005680738820[66] = 0;
   out_5351241005680738820[67] = 0;
   out_5351241005680738820[68] = 0;
   out_5351241005680738820[69] = 0;
   out_5351241005680738820[70] = 0;
   out_5351241005680738820[71] = 0;
   out_5351241005680738820[72] = 1;
   out_5351241005680738820[73] = 0;
   out_5351241005680738820[74] = 0;
   out_5351241005680738820[75] = 0;
   out_5351241005680738820[76] = 0;
   out_5351241005680738820[77] = 0;
   out_5351241005680738820[78] = 0;
   out_5351241005680738820[79] = 0;
   out_5351241005680738820[80] = 0;
   out_5351241005680738820[81] = 0;
   out_5351241005680738820[82] = 0;
   out_5351241005680738820[83] = 0;
   out_5351241005680738820[84] = 0;
   out_5351241005680738820[85] = 0;
   out_5351241005680738820[86] = 0;
   out_5351241005680738820[87] = 0;
}
void h_13(double *state, double *unused, double *out_3491309275453140949) {
   out_3491309275453140949[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3491309275453140949[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3491309275453140949[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1664464166163638855) {
   out_1664464166163638855[0] = 0;
   out_1664464166163638855[1] = 0;
   out_1664464166163638855[2] = 0;
   out_1664464166163638855[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1664464166163638855[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1664464166163638855[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1664464166163638855[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1664464166163638855[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1664464166163638855[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1664464166163638855[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1664464166163638855[10] = 0;
   out_1664464166163638855[11] = 0;
   out_1664464166163638855[12] = 0;
   out_1664464166163638855[13] = 0;
   out_1664464166163638855[14] = 0;
   out_1664464166163638855[15] = 0;
   out_1664464166163638855[16] = 0;
   out_1664464166163638855[17] = 0;
   out_1664464166163638855[18] = 0;
   out_1664464166163638855[19] = 0;
   out_1664464166163638855[20] = 0;
   out_1664464166163638855[21] = 0;
   out_1664464166163638855[22] = 0;
   out_1664464166163638855[23] = 0;
   out_1664464166163638855[24] = 0;
   out_1664464166163638855[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1664464166163638855[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1664464166163638855[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1664464166163638855[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1664464166163638855[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1664464166163638855[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1664464166163638855[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1664464166163638855[32] = 0;
   out_1664464166163638855[33] = 0;
   out_1664464166163638855[34] = 0;
   out_1664464166163638855[35] = 0;
   out_1664464166163638855[36] = 0;
   out_1664464166163638855[37] = 0;
   out_1664464166163638855[38] = 0;
   out_1664464166163638855[39] = 0;
   out_1664464166163638855[40] = 0;
   out_1664464166163638855[41] = 0;
   out_1664464166163638855[42] = 0;
   out_1664464166163638855[43] = 0;
   out_1664464166163638855[44] = 0;
   out_1664464166163638855[45] = 0;
   out_1664464166163638855[46] = 0;
   out_1664464166163638855[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1664464166163638855[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1664464166163638855[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1664464166163638855[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1664464166163638855[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1664464166163638855[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1664464166163638855[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1664464166163638855[54] = 0;
   out_1664464166163638855[55] = 0;
   out_1664464166163638855[56] = 0;
   out_1664464166163638855[57] = 0;
   out_1664464166163638855[58] = 0;
   out_1664464166163638855[59] = 0;
   out_1664464166163638855[60] = 0;
   out_1664464166163638855[61] = 0;
   out_1664464166163638855[62] = 0;
   out_1664464166163638855[63] = 0;
   out_1664464166163638855[64] = 0;
   out_1664464166163638855[65] = 0;
}
void h_14(double *state, double *unused, double *out_6558772355698767102) {
   out_6558772355698767102[0] = state[10];
   out_6558772355698767102[1] = state[11];
   out_6558772355698767102[2] = state[12];
}
void H_14(double *state, double *unused, double *out_557889569480695504) {
   out_557889569480695504[0] = 0;
   out_557889569480695504[1] = 0;
   out_557889569480695504[2] = 0;
   out_557889569480695504[3] = 0;
   out_557889569480695504[4] = 0;
   out_557889569480695504[5] = 0;
   out_557889569480695504[6] = 0;
   out_557889569480695504[7] = 0;
   out_557889569480695504[8] = 0;
   out_557889569480695504[9] = 0;
   out_557889569480695504[10] = 1;
   out_557889569480695504[11] = 0;
   out_557889569480695504[12] = 0;
   out_557889569480695504[13] = 0;
   out_557889569480695504[14] = 0;
   out_557889569480695504[15] = 0;
   out_557889569480695504[16] = 0;
   out_557889569480695504[17] = 0;
   out_557889569480695504[18] = 0;
   out_557889569480695504[19] = 0;
   out_557889569480695504[20] = 0;
   out_557889569480695504[21] = 0;
   out_557889569480695504[22] = 0;
   out_557889569480695504[23] = 0;
   out_557889569480695504[24] = 0;
   out_557889569480695504[25] = 0;
   out_557889569480695504[26] = 0;
   out_557889569480695504[27] = 0;
   out_557889569480695504[28] = 0;
   out_557889569480695504[29] = 0;
   out_557889569480695504[30] = 0;
   out_557889569480695504[31] = 0;
   out_557889569480695504[32] = 0;
   out_557889569480695504[33] = 1;
   out_557889569480695504[34] = 0;
   out_557889569480695504[35] = 0;
   out_557889569480695504[36] = 0;
   out_557889569480695504[37] = 0;
   out_557889569480695504[38] = 0;
   out_557889569480695504[39] = 0;
   out_557889569480695504[40] = 0;
   out_557889569480695504[41] = 0;
   out_557889569480695504[42] = 0;
   out_557889569480695504[43] = 0;
   out_557889569480695504[44] = 0;
   out_557889569480695504[45] = 0;
   out_557889569480695504[46] = 0;
   out_557889569480695504[47] = 0;
   out_557889569480695504[48] = 0;
   out_557889569480695504[49] = 0;
   out_557889569480695504[50] = 0;
   out_557889569480695504[51] = 0;
   out_557889569480695504[52] = 0;
   out_557889569480695504[53] = 0;
   out_557889569480695504[54] = 0;
   out_557889569480695504[55] = 0;
   out_557889569480695504[56] = 1;
   out_557889569480695504[57] = 0;
   out_557889569480695504[58] = 0;
   out_557889569480695504[59] = 0;
   out_557889569480695504[60] = 0;
   out_557889569480695504[61] = 0;
   out_557889569480695504[62] = 0;
   out_557889569480695504[63] = 0;
   out_557889569480695504[64] = 0;
   out_557889569480695504[65] = 0;
}
void h_33(double *state, double *unused, double *out_4130482847495987501) {
   out_4130482847495987501[0] = state[16];
   out_4130482847495987501[1] = state[17];
   out_4130482847495987501[2] = state[18];
}
void H_33(double *state, double *unused, double *out_5718139845901178831) {
   out_5718139845901178831[0] = 0;
   out_5718139845901178831[1] = 0;
   out_5718139845901178831[2] = 0;
   out_5718139845901178831[3] = 0;
   out_5718139845901178831[4] = 0;
   out_5718139845901178831[5] = 0;
   out_5718139845901178831[6] = 0;
   out_5718139845901178831[7] = 0;
   out_5718139845901178831[8] = 0;
   out_5718139845901178831[9] = 0;
   out_5718139845901178831[10] = 0;
   out_5718139845901178831[11] = 0;
   out_5718139845901178831[12] = 0;
   out_5718139845901178831[13] = 0;
   out_5718139845901178831[14] = 0;
   out_5718139845901178831[15] = 0;
   out_5718139845901178831[16] = 1;
   out_5718139845901178831[17] = 0;
   out_5718139845901178831[18] = 0;
   out_5718139845901178831[19] = 0;
   out_5718139845901178831[20] = 0;
   out_5718139845901178831[21] = 0;
   out_5718139845901178831[22] = 0;
   out_5718139845901178831[23] = 0;
   out_5718139845901178831[24] = 0;
   out_5718139845901178831[25] = 0;
   out_5718139845901178831[26] = 0;
   out_5718139845901178831[27] = 0;
   out_5718139845901178831[28] = 0;
   out_5718139845901178831[29] = 0;
   out_5718139845901178831[30] = 0;
   out_5718139845901178831[31] = 0;
   out_5718139845901178831[32] = 0;
   out_5718139845901178831[33] = 0;
   out_5718139845901178831[34] = 0;
   out_5718139845901178831[35] = 0;
   out_5718139845901178831[36] = 0;
   out_5718139845901178831[37] = 0;
   out_5718139845901178831[38] = 0;
   out_5718139845901178831[39] = 1;
   out_5718139845901178831[40] = 0;
   out_5718139845901178831[41] = 0;
   out_5718139845901178831[42] = 0;
   out_5718139845901178831[43] = 0;
   out_5718139845901178831[44] = 0;
   out_5718139845901178831[45] = 0;
   out_5718139845901178831[46] = 0;
   out_5718139845901178831[47] = 0;
   out_5718139845901178831[48] = 0;
   out_5718139845901178831[49] = 0;
   out_5718139845901178831[50] = 0;
   out_5718139845901178831[51] = 0;
   out_5718139845901178831[52] = 0;
   out_5718139845901178831[53] = 0;
   out_5718139845901178831[54] = 0;
   out_5718139845901178831[55] = 0;
   out_5718139845901178831[56] = 0;
   out_5718139845901178831[57] = 0;
   out_5718139845901178831[58] = 0;
   out_5718139845901178831[59] = 0;
   out_5718139845901178831[60] = 0;
   out_5718139845901178831[61] = 0;
   out_5718139845901178831[62] = 1;
   out_5718139845901178831[63] = 0;
   out_5718139845901178831[64] = 0;
   out_5718139845901178831[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2878163332676000540) {
  H(in_vec, out_2878163332676000540);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1459947820727129062) {
  err_fun(nom_x, delta_x, out_1459947820727129062);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4470484474002255370) {
  inv_err_fun(nom_x, true_x, out_4470484474002255370);
}
void live_H_mod_fun(double *state, double *out_7668485600411002239) {
  H_mod_fun(state, out_7668485600411002239);
}
void live_f_fun(double *state, double dt, double *out_1547214029111368966) {
  f_fun(state,  dt, out_1547214029111368966);
}
void live_F_fun(double *state, double dt, double *out_288403762753222131) {
  F_fun(state,  dt, out_288403762753222131);
}
void live_h_4(double *state, double *unused, double *out_7908376479176728560) {
  h_4(state, unused, out_7908376479176728560);
}
void live_H_4(double *state, double *unused, double *out_799079216110286149) {
  H_4(state, unused, out_799079216110286149);
}
void live_h_9(double *state, double *unused, double *out_6558772355698767102) {
  h_9(state, unused, out_6558772355698767102);
}
void live_H_9(double *state, double *unused, double *out_557889569480695504) {
  H_9(state, unused, out_557889569480695504);
}
void live_h_10(double *state, double *unused, double *out_1840225830705905829) {
  h_10(state, unused, out_1840225830705905829);
}
void live_H_10(double *state, double *unused, double *out_6875568155516334644) {
  H_10(state, unused, out_6875568155516334644);
}
void live_h_12(double *state, double *unused, double *out_3938035012682619485) {
  h_12(state, unused, out_3938035012682619485);
}
void live_H_12(double *state, double *unused, double *out_177980191062692482) {
  H_12(state, unused, out_177980191062692482);
}
void live_h_31(double *state, double *unused, double *out_6069685274528503166) {
  h_31(state, unused, out_6069685274528503166);
}
void live_H_31(double *state, double *unused, double *out_2567582841262321227) {
  H_31(state, unused, out_2567582841262321227);
}
void live_h_32(double *state, double *unused, double *out_7831050498024517196) {
  h_32(state, unused, out_7831050498024517196);
}
void live_H_32(double *state, double *unused, double *out_5351241005680738820) {
  H_32(state, unused, out_5351241005680738820);
}
void live_h_13(double *state, double *unused, double *out_3491309275453140949) {
  h_13(state, unused, out_3491309275453140949);
}
void live_H_13(double *state, double *unused, double *out_1664464166163638855) {
  H_13(state, unused, out_1664464166163638855);
}
void live_h_14(double *state, double *unused, double *out_6558772355698767102) {
  h_14(state, unused, out_6558772355698767102);
}
void live_H_14(double *state, double *unused, double *out_557889569480695504) {
  H_14(state, unused, out_557889569480695504);
}
void live_h_33(double *state, double *unused, double *out_4130482847495987501) {
  h_33(state, unused, out_4130482847495987501);
}
void live_H_33(double *state, double *unused, double *out_5718139845901178831) {
  H_33(state, unused, out_5718139845901178831);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
